{"version":3,"sources":["../../../../src/components/visualizations/editor/withControlLabel.tsx"],"names":["ControlLabel","layout","label","labelProps","disabled","children","defaultProps","withControlLabel","WrappedControl","ControlWrapper","className","id","props","fallbackId","Math","random","toString","substr","htmlFor"],"mappings":";;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AAEA;;;;;;;;;;;;;;;;;;;;AAYO,SAASA,YAAT,OAAgF;AAAA,MAAxDC,MAAwD,QAAxDA,MAAwD;AAAA,MAAhDC,KAAgD,QAAhDA,KAAgD;AAAA,MAAzCC,UAAyC,QAAzCA,UAAyC;AAAA,MAA7BC,QAA6B,QAA7BA,QAA6B;AAAA,MAAnBC,QAAmB,QAAnBA,QAAmB;;AACrF,MAAIJ,MAAM,KAAK,UAAX,IAAyBC,KAA7B,EAAoC;AAClC,wBACE;AAAK,MAAA,SAAS,EAAC;AAAf,oBACE,sCAAWC,UAAX,eACE,6BAAC,mBAAD,CAAY,IAAZ;AAAiB,MAAA,QAAQ,EAAEC;AAA3B,OAAsCF,KAAtC,CADF,CADF,EAIGG,QAJH,CADF;AAQD;;AAED,MAAIJ,MAAM,KAAK,YAAX,IAA2BC,KAA/B,EAAsC;AACpC,wBACE,6BAAC,IAAD,CAAM,GAAN;AACE,MAAA,SAAS,EAAC,kFADZ,CAEE;AAFF;AAGE,MAAA,IAAI,EAAC,MAHP;AAIE,MAAA,KAAK,EAAC,QAJR;AAKE,MAAA,MAAM,EAAE;AALV,oBAME,6BAAC,IAAD,CAAM,GAAN;AAAU,MAAA,IAAI,EAAE;AAAhB,oBACE,sCAAWC,UAAX,eACE,6BAAC,mBAAD,CAAY,IAAZ;AAAiB,MAAA,QAAQ,EAAEC;AAA3B,OAAsCF,KAAtC,CADF,CADF,CANF,eAWE,6BAAC,IAAD,CAAM,GAAN;AAAU,MAAA,IAAI,EAAE;AAAhB,OAAqBG,QAArB,CAXF,CADF;AAeD;;AAED,SAAOA,QAAP;AACD;;AAEDL,YAAY,CAACM,YAAb,GAA4B;AAC1BL,EAAAA,MAAM,EAAE,UADkB;AAE1BC,EAAAA,KAAK,EAAE,IAFmB;AAG1BE,EAAAA,QAAQ,EAAE,KAHgB;AAI1BC,EAAAA,QAAQ,EAAE;AAJgB,CAA5B;;AAOe,SAASE,gBAAT,CAA0BC,cAA1B,EAA+C;AAC5D;AACA,WAASC,cAAT,QAA+F;AAAA,QAArEC,SAAqE,SAArEA,SAAqE;AAAA,QAA1DC,EAA0D,SAA1DA,EAA0D;AAAA,QAAtDV,MAAsD,SAAtDA,MAAsD;AAAA,QAA9CC,KAA8C,SAA9CA,KAA8C;AAAA,QAAvCC,UAAuC,SAAvCA,UAAuC;AAAA,QAA3BC,QAA2B,SAA3BA,QAA2B;AAAA,QAAdQ,KAAc;;AAC7F,QAAMC,UAAU,GAAG,oBACjB,6CACkCC,IAAI,CAACC,MAAL,GAC7BC,QAD6B,CACpB,EADoB,EAE7BC,MAF6B,CAEtB,CAFsB,EAEnB,EAFmB,CADlC,CADiB,EAKjB,EALiB,CAAnB;AAOAd,IAAAA,UAAU,qBACLA,UADK;AAERe,MAAAA,OAAO,EAAEP,EAAE,IAAIE;AAFP,MAAV;AAKA,wBACE,6BAAC,YAAD;AAAc,MAAA,MAAM,EAAEZ,MAAtB;AAA8B,MAAA,KAAK,EAAEC,KAArC;AAA4C,MAAA,UAAU,EAAEC,UAAxD;AAAoE,MAAA,QAAQ,EAAEC;AAA9E,oBAEE,6BAAC,cAAD;AACE,MAAA,SAAS,EAAE,yBAAG,4BAAH,EAAiCM,SAAjC,CADb;AAEE,MAAA,EAAE,EAAEP,UAAU,CAACe,OAFjB;AAGE,MAAA,QAAQ,EAAEd;AAHZ,OAIMQ,KAJN,EAFF,CADF;AAWD,GA1B2D,CA4B5D;;;AACA,qCAAqBH,cAArB,EAAqCD,cAArC;AAEA,SAAOC,cAAP;AACD","sourcesContent":["import React, { useMemo } from \"react\";\nimport cx from \"classnames\";\nimport hoistNonReactStatics from \"hoist-non-react-statics\";\nimport * as Grid from \"antd/lib/grid\";\nimport Typography from \"antd/lib/typography\";\n\nimport \"./control-label.less\";\n\ntype OwnProps = {\n  layout?: \"vertical\" | \"horizontal\";\n  label?: React.ReactNode;\n  labelProps?: any;\n  disabled?: boolean;\n  children?: React.ReactNode;\n};\n\ntype Props = OwnProps & typeof ControlLabel.defaultProps;\n\nexport function ControlLabel({ layout, label, labelProps, disabled, children }: Props) {\n  if (layout === \"vertical\" && label) {\n    return (\n      <div className=\"visualization-editor-control-label visualization-editor-control-label-vertical\">\n        <label {...labelProps}>\n          <Typography.Text disabled={disabled}>{label}</Typography.Text>\n        </label>\n        {children}\n      </div>\n    );\n  }\n\n  if (layout === \"horizontal\" && label) {\n    return (\n      <Grid.Row\n        className=\"visualization-editor-control-label visualization-editor-control-label-horizontal\"\n        // @ts-expect-error ts-migrate(2322) FIXME: Type '{ children: Element[]; className: string; ty... Remove this comment to see the full error message\n        type=\"flex\"\n        align=\"middle\"\n        gutter={15}>\n        <Grid.Col span={12}>\n          <label {...labelProps}>\n            <Typography.Text disabled={disabled}>{label}</Typography.Text>\n          </label>\n        </Grid.Col>\n        <Grid.Col span={12}>{children}</Grid.Col>\n      </Grid.Row>\n    );\n  }\n\n  return children;\n}\n\nControlLabel.defaultProps = {\n  layout: \"vertical\",\n  label: null,\n  disabled: false,\n  children: null,\n};\n\nexport default function withControlLabel(WrappedControl: any) {\n  // eslint-disable-next-line react/prop-types\n  function ControlWrapper({ className, id, layout, label, labelProps, disabled, ...props }: any) {\n    const fallbackId = useMemo(\n      () =>\n        `visualization-editor-control-${Math.random()\n          .toString(36)\n          .substr(2, 10)}`,\n      []\n    );\n    labelProps = {\n      ...labelProps,\n      htmlFor: id || fallbackId,\n    };\n\n    return (\n      <ControlLabel layout={layout} label={label} labelProps={labelProps} disabled={disabled}>\n        {/* @ts-expect-error ts-migrate(2322) FIXME: Type 'Element' is not assignable to type 'null | u... Remove this comment to see the full error message */}\n        <WrappedControl\n          className={cx(\"visualization-editor-input\", className)}\n          id={labelProps.htmlFor}\n          disabled={disabled}\n          {...props}\n        />\n      </ControlLabel>\n    );\n  }\n\n  // Copy static methods from `WrappedComponent`\n  hoistNonReactStatics(ControlWrapper, WrappedControl);\n\n  return ControlWrapper;\n}\n"],"file":"withControlLabel.js"}