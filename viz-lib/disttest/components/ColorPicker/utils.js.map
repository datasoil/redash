{"version":3,"sources":["../../../src/components/ColorPicker/utils.ts"],"names":["validateColor","value","fallback","isValid","toHex","toUpperCase","getColorName","color","presetColors","v"],"mappings":";;;;;;;;AAAA;;AACA;;;;AAEO,SAASA,aAAT,CAAuBC,KAAvB,EAAoD;AAAA,MAAjBC,QAAiB,uEAAN,IAAM;AACzDD,EAAAA,KAAK,GAAG,wBAAUA,KAAV,CAAR;AACA,SAAOA,KAAK,CAACE,OAAN,KAAkB,MAAMF,KAAK,CAACG,KAAN,GAAcC,WAAd,EAAxB,GAAsDH,QAA7D;AACD;;AAEM,SAASI,YAAT,CAAsBC,KAAtB,EAAkCC,YAAlC,EAAqD;AAC1D,MAAI,qBAAQA,YAAR,CAAJ,EAA2B;AACzB,WAAOD,KAAP;AACD;;AACD,SAAO,qBAAQC,YAAR,EAAsBC,CAAC,IAAIT,aAAa,CAACS,CAAD,CAAb,KAAqBF,KAAhD,KAA0DA,KAAjE;AACD","sourcesContent":["import { isArray, findKey } from \"lodash\";\nimport tinycolor from \"tinycolor2\";\n\nexport function validateColor(value: any, fallback = null) {\n  value = tinycolor(value);\n  return value.isValid() ? \"#\" + value.toHex().toUpperCase() : fallback;\n}\n\nexport function getColorName(color: any, presetColors: any) {\n  if (isArray(presetColors)) {\n    return color;\n  }\n  return findKey(presetColors, v => validateColor(v) === color) || color;\n}\n"],"file":"utils.js"}