{"version":3,"sources":["../../src/lib/utils.ts"],"names":["formatDateTime","value","parsed","isValid","format","visualizationsSettings","dateTimeFormat","formatDate","dateFormat","formatColumnValue","columnType","moment","isMoment","toString"],"mappings":";;;;;;;AAAA;;AACA;;;;AAEA,SAASA,cAAT,CAAwBC,KAAxB,EAAoC;AAClC,MAAI,CAACA,KAAL,EAAY;AACV,WAAO,EAAP;AACD;;AAED,MAAMC,MAAM,GAAG,qBAAOD,KAAP,CAAf;;AACA,MAAI,CAACC,MAAM,CAACC,OAAP,EAAL,EAAuB;AACrB,WAAO,GAAP;AACD;;AAED,SAAOD,MAAM,CAACE,MAAP,CAAcC,+CAAuBC,cAArC,CAAP;AACD;;AAED,SAASC,UAAT,CAAoBN,KAApB,EAAgC;AAC9B,MAAI,CAACA,KAAL,EAAY;AACV,WAAO,EAAP;AACD;;AAED,MAAMC,MAAM,GAAG,qBAAOD,KAAP,CAAf;;AACA,MAAI,CAACC,MAAM,CAACC,OAAP,EAAL,EAAuB;AACrB,WAAO,GAAP;AACD;;AAED,SAAOD,MAAM,CAACE,MAAP,CAAcC,+CAAuBG,UAArC,CAAP;AACD;;AAEM,SAASC,iBAAT,CAA2BR,KAA3B,EAA0D;AAAA,MAAnBS,UAAmB,uEAAN,IAAM;;AAC/D,MAAIC,gBAAOC,QAAP,CAAgBX,KAAhB,CAAJ,EAA4B;AAC1B,QAAIS,UAAU,KAAK,MAAnB,EAA2B;AACzB,aAAOH,UAAU,CAACN,KAAD,CAAjB;AACD;;AACD,WAAOD,cAAc,CAACC,KAAD,CAArB;AACD;;AAED,MAAI,OAAOA,KAAP,KAAiB,SAArB,EAAgC;AAC9B,WAAOA,KAAK,CAACY,QAAN,EAAP;AACD;;AAED,SAAOZ,KAAP;AACD","sourcesContent":["import moment from \"moment\";\nimport { visualizationsSettings } from \"@/visualizations/visualizationsSettings\";\n\nfunction formatDateTime(value: any) {\n  if (!value) {\n    return \"\";\n  }\n\n  const parsed = moment(value);\n  if (!parsed.isValid()) {\n    return \"-\";\n  }\n\n  return parsed.format(visualizationsSettings.dateTimeFormat);\n}\n\nfunction formatDate(value: any) {\n  if (!value) {\n    return \"\";\n  }\n\n  const parsed = moment(value);\n  if (!parsed.isValid()) {\n    return \"-\";\n  }\n\n  return parsed.format(visualizationsSettings.dateFormat);\n}\n\nexport function formatColumnValue(value: any, columnType = null) {\n  if (moment.isMoment(value)) {\n    if (columnType === \"date\") {\n      return formatDate(value);\n    }\n    return formatDateTime(value);\n  }\n\n  if (typeof value === \"boolean\") {\n    return value.toString();\n  }\n\n  return value;\n}\n"],"file":"utils.js"}