{"version":3,"sources":["../../../src/visualizations/cohort/Renderer.tsx"],"names":["Renderer","data","options","cohortData","initialDate","corneliusOptions","timeInterval","noValuePlaceholder","rawNumberOnHover","showTooltips","displayAbsoluteValues","percentValues","timeColumnTitle","peopleColumnTitle","stageColumnTitle","numberFormat","percentFormat","colors","length","propTypes","RendererPropTypes"],"mappings":";;;;;;;AAAA;;AACA;;AAEA;;AACA;;AAEA;;;;;;;;AAEe,SAASA,QAAT,OAA0C;AAAA,MAAtBC,IAAsB,QAAtBA,IAAsB;AAAA,MAAhBC,OAAgB,QAAhBA,OAAgB;;AAAA,iBACb,oBAAQ,MAAM,0BAAYD,IAAZ,EAAkBC,OAAlB,CAAd,EAA0C,CAACD,IAAD,EAAOC,OAAP,CAA1C,CADa;AAAA,MACzCC,UADyC,YAC/CF,IAD+C;AAAA,MAC7BG,WAD6B,YAC7BA,WAD6B;;AAGvD,MAAMC,gBAAgB,GAAG,oBACvB,OAAO;AACLD,IAAAA,WADK;AAELE,IAAAA,YAAY,EAAEJ,OAAO,CAACI,YAFjB;AAILC,IAAAA,kBAAkB,EAAEL,OAAO,CAACK,kBAJvB;AAKLC,IAAAA,gBAAgB,EAAEN,OAAO,CAACO,YALrB;AAMLC,IAAAA,qBAAqB,EAAE,CAACR,OAAO,CAACS,aAN3B;AAQLC,IAAAA,eAAe,EAAEV,OAAO,CAACU,eARpB;AASLC,IAAAA,iBAAiB,EAAEX,OAAO,CAACW,iBATtB;AAULC,IAAAA,gBAAgB,EAAEZ,OAAO,CAACY,gBAVrB;AAYLC,IAAAA,YAAY,EAAEb,OAAO,CAACa,YAZjB;AAaLC,IAAAA,aAAa,EAAEd,OAAO,CAACc,aAblB;AAeLC,IAAAA,MAAM,EAAEf,OAAO,CAACe;AAfX,GAAP,CADuB,EAkBvB,CAACf,OAAD,EAAUE,WAAV,CAlBuB,CAAzB;;AAqBA,MAAID,UAAU,CAACe,MAAX,KAAsB,CAA1B,EAA6B;AAC3B,WAAO,IAAP;AACD;;AAED,sBACE;AAAK,IAAA,SAAS,EAAC;AAAf,kBACE,6BAAC,kBAAD;AAAW,IAAA,IAAI,EAAEf,UAAjB;AAA6B,IAAA,OAAO,EAAEE;AAAtC,IADF,CADF;AAKD;;AAEDL,QAAQ,CAACmB,SAAT,GAAqBC,4BAArB","sourcesContent":["import React, { useMemo } from \"react\";\nimport { RendererPropTypes } from \"@/visualizations/prop-types\";\n\nimport prepareData from \"./prepareData\";\nimport \"./renderer.less\";\n\nimport Cornelius from \"./Cornelius\";\n\nexport default function Renderer({ data, options }: any) {\n  const { data: cohortData, initialDate } = useMemo(() => prepareData(data, options), [data, options]);\n\n  const corneliusOptions = useMemo(\n    () => ({\n      initialDate,\n      timeInterval: options.timeInterval,\n\n      noValuePlaceholder: options.noValuePlaceholder,\n      rawNumberOnHover: options.showTooltips,\n      displayAbsoluteValues: !options.percentValues,\n\n      timeColumnTitle: options.timeColumnTitle,\n      peopleColumnTitle: options.peopleColumnTitle,\n      stageColumnTitle: options.stageColumnTitle,\n\n      numberFormat: options.numberFormat,\n      percentFormat: options.percentFormat,\n\n      colors: options.colors,\n    }),\n    [options, initialDate]\n  );\n\n  if (cohortData.length === 0) {\n    return null;\n  }\n\n  return (\n    <div className=\"cohort-visualization-container\">\n      <Cornelius data={cohortData} options={corneliusOptions} />\n    </div>\n  );\n}\n\nRenderer.propTypes = RendererPropTypes;\n"],"file":"Renderer.js"}