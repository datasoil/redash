{"version":3,"sources":["../../../src/visualizations/counter/Renderer.tsx"],"names":["getCounterStyles","scale","msTransform","MozTransform","WebkitTransform","transform","getCounterScale","container","inner","firstChild","Math","min","offsetWidth","offsetHeight","Number","toFixed","Renderer","data","options","visualizationName","setScale","setContainer","unwatch","rows","showTrend","trendPositive","counterValue","counterValueTooltip","targetValue","targetValueTooltip","counterLabel","propTypes","RendererPropTypes"],"mappings":"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","sourcesContent":["import { isFinite } from \"lodash\";\nimport React, { useState, useEffect } from \"react\";\nimport cx from \"classnames\";\nimport resizeObserver from \"@/services/resizeObserver\";\nimport { RendererPropTypes } from \"@/visualizations/prop-types\";\n\nimport { getCounterData } from \"./utils\";\n\nimport \"./render.less\";\n\nfunction getCounterStyles(scale: any) {\n  return {\n    msTransform: `scale(${scale})`,\n    MozTransform: `scale(${scale})`,\n    WebkitTransform: `scale(${scale})`,\n    transform: `scale(${scale})`,\n  };\n}\n\nfunction getCounterScale(container: any) {\n  const inner = container.firstChild;\n  const scale = Math.min(container.offsetWidth / inner.offsetWidth, container.offsetHeight / inner.offsetHeight);\n  return Number(isFinite(scale) ? scale : 1).toFixed(2); // keep only two decimal places\n}\n\nexport default function Renderer({ data, options, visualizationName }: any) {\n  const [scale, setScale] = useState(\"1.00\");\n  const [container, setContainer] = useState(null);\n\n  useEffect(() => {\n    if (container) {\n      const unwatch = resizeObserver(container, () => {\n        setScale(getCounterScale(container));\n      });\n      return unwatch;\n    }\n  }, [container]);\n\n  useEffect(() => {\n    if (container) {\n      // update scaling when options or data change (new formatting, values, etc.\n      // may change inner container dimensions which will not be tracked by `resizeObserver`);\n      setScale(getCounterScale(container));\n    }\n  }, [data, options, container]);\n\n  const {\n    // @ts-expect-error ts-migrate(2339) FIXME: Property 'showTrend' does not exist on type '{}'.\n    showTrend,\n    // @ts-expect-error ts-migrate(2339) FIXME: Property 'trendPositive' does not exist on type '{... Remove this comment to see the full error message\n    trendPositive,\n    // @ts-expect-error ts-migrate(2339) FIXME: Property 'counterValue' does not exist on type '{}... Remove this comment to see the full error message\n    counterValue,\n    // @ts-expect-error ts-migrate(2339) FIXME: Property 'counterValueTooltip' does not exist on t... Remove this comment to see the full error message\n    counterValueTooltip,\n    // @ts-expect-error ts-migrate(2339) FIXME: Property 'targetValue' does not exist on type '{}'... Remove this comment to see the full error message\n    targetValue,\n    // @ts-expect-error ts-migrate(2339) FIXME: Property 'targetValueTooltip' does not exist on ty... Remove this comment to see the full error message\n    targetValueTooltip,\n    // @ts-expect-error ts-migrate(2339) FIXME: Property 'counterLabel' does not exist on type '{}... Remove this comment to see the full error message\n    counterLabel,\n  } = getCounterData(data.rows, options, visualizationName);\n  return (\n    <div\n      className={cx(\"counter-visualization-container\", {\n        \"trend-positive\": showTrend && trendPositive,\n        \"trend-negative\": showTrend && !trendPositive,\n      })}>\n      {/* @ts-expect-error ts-migrate(2322) FIXME: Type 'Dispatch<SetStateAction<null>>' is not assig... Remove this comment to see the full error message */}\n      <div className=\"counter-visualization-content\" ref={setContainer}>\n        <div style={getCounterStyles(scale)}>\n          <div className=\"counter-visualization-value\" title={counterValueTooltip}>\n            {counterValue}\n          </div>\n          {targetValue && (\n            <div className=\"counter-visualization-target\" title={targetValueTooltip}>\n              ({targetValue})\n            </div>\n          )}\n          <div className=\"counter-visualization-label\">{counterLabel}</div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nRenderer.propTypes = RendererPropTypes;\n"],"file":"Renderer.js"}