{"version":3,"sources":["../../../../src/visualizations/funnel/Renderer/index.tsx"],"names":["generateRowKeyPrefix","Math","trunc","random","Number","MAX_SAFE_INTEGER","toString","Renderer","data","options","funnelData","rows","rowKeyPrefix","formatValue","numberFormat","formatPercentValue","format","percentFormat","value","percentValuesRange","min","max","columns","length","maxToPrevious","d","isFinite","pctPrevious","title","stepCol","displayAs","dataIndex","width","className","render","text","valueCol","align","item","ColorPalette","Cyan","pctMax","record","index","propTypes","RendererPropTypes"],"mappings":"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","sourcesContent":["import { maxBy } from \"lodash\";\nimport React, { useMemo } from \"react\";\nimport Table from \"antd/lib/table\";\nimport Tooltip from \"antd/lib/tooltip\";\nimport { RendererPropTypes } from \"@/visualizations/prop-types\";\nimport ColorPalette from \"@/visualizations/ColorPalette\";\nimport { createNumberFormatter } from \"@/lib/value-format\";\n\nimport prepareData from \"./prepareData\";\nimport FunnelBar from \"./FunnelBar\";\nimport \"./index.less\";\n\nfunction generateRowKeyPrefix() {\n  return Math.trunc(Math.random() * Number.MAX_SAFE_INTEGER).toString(36) + \":\";\n}\n\nexport default function Renderer({ data, options }: any) {\n  const funnelData = useMemo(() => prepareData(data.rows, options), [data, options]);\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  const rowKeyPrefix = useMemo(() => generateRowKeyPrefix(), [funnelData]);\n\n  const formatValue = useMemo(() => createNumberFormatter(options.numberFormat), [options.numberFormat]);\n\n  const formatPercentValue = useMemo(() => {\n    const format = createNumberFormatter(options.percentFormat);\n    return (value: any) => {\n      if (value < options.percentValuesRange.min) {\n        return `<${format(options.percentValuesRange.min)}`;\n      }\n      if (value > options.percentValuesRange.max) {\n        return `>${format(options.percentValuesRange.max)}`;\n      }\n      return format(value);\n    };\n  }, [options.percentFormat, options.percentValuesRange]);\n\n  const columns = useMemo(() => {\n    if (funnelData.length === 0) {\n      return [];\n    }\n\n    // @ts-expect-error ts-migrate(2532) FIXME: Object is possibly 'undefined'.\n    const maxToPrevious = maxBy(funnelData, d => (isFinite(d.pctPrevious) ? d.pctPrevious : 0)).pctPrevious;\n    return [\n      {\n        title: options.stepCol.displayAs,\n        dataIndex: \"step\",\n        width: \"25%\",\n        className: \"text-ellipsis\",\n        render: (text: any) => (\n          <Tooltip title={text} mouseEnterDelay={0} mouseLeaveDelay={0}>\n            {text}\n          </Tooltip>\n        ),\n      },\n      {\n        title: options.valueCol.displayAs,\n        dataIndex: \"value\",\n        width: \"45%\",\n        align: \"center\",\n        render: (value: any, item: any) => (\n          // @ts-expect-error ts-migrate(2745) FIXME: This JSX tag's 'children' prop expects type 'never... Remove this comment to see the full error message\n          <FunnelBar align=\"center\" color={ColorPalette.Cyan} value={item.pctMax}>\n            {formatValue(value)}\n          </FunnelBar>\n        ),\n      },\n      {\n        title: \"% Max\",\n        dataIndex: \"pctMax\",\n        width: \"15%\",\n        align: \"center\",\n        render: (value: any) => formatPercentValue(value),\n      },\n      {\n        title: \"% Previous\",\n        dataIndex: \"pctPrevious\",\n        width: \"15%\",\n        align: \"center\",\n        render: (value: any) => (\n          // @ts-expect-error ts-migrate(2745) FIXME: This JSX tag's 'children' prop expects type 'never... Remove this comment to see the full error message\n          <FunnelBar className=\"funnel-percent-column\" value={(value / maxToPrevious) * 100.0}>\n            {formatPercentValue(value)}\n          </FunnelBar>\n        ),\n      },\n    ];\n  }, [options.stepCol.displayAs, options.valueCol.displayAs, funnelData, formatValue, formatPercentValue]);\n\n  if (funnelData.length === 0) {\n    return null;\n  }\n\n  return (\n    <div className=\"funnel-visualization-container\">\n      <Table\n        // @ts-expect-error ts-migrate(2322) FIXME: Type '({ title: any; dataIndex: string; width: str... Remove this comment to see the full error message\n        columns={columns}\n        dataSource={funnelData}\n        rowKey={(record, index) => rowKeyPrefix + index}\n        pagination={false}\n      />\n    </div>\n  );\n}\n\nRenderer.propTypes = RendererPropTypes;\n"],"file":"index.js"}