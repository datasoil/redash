{"version":3,"sources":["../../../src/visualizations/funnel/getOptions.ts"],"names":["DEFAULT_OPTIONS","stepCol","colName","displayAs","valueCol","autoSort","sortKeyCol","reverse","itemsLimit","percentValuesRange","min","max","numberFormat","percentFormat","getOptions","options","columns","availableColumns","c","name"],"mappings":";;;;;;;AAAA;;AAEA,IAAMA,eAAe,GAAG;AACtBC,EAAAA,OAAO,EAAE;AAAEC,IAAAA,OAAO,EAAE,IAAX;AAAiBC,IAAAA,SAAS,EAAE;AAA5B,GADa;AAEtBC,EAAAA,QAAQ,EAAE;AAAEF,IAAAA,OAAO,EAAE,IAAX;AAAiBC,IAAAA,SAAS,EAAE;AAA5B,GAFY;AAGtBE,EAAAA,QAAQ,EAAE,IAHY;AAItBC,EAAAA,UAAU,EAAE;AAAEJ,IAAAA,OAAO,EAAE,IAAX;AAAiBK,IAAAA,OAAO,EAAE;AAA1B,GAJU;AAKtBC,EAAAA,UAAU,EAAE,GALU;AAMtBC,EAAAA,kBAAkB,EAAE;AAAEC,IAAAA,GAAG,EAAE,IAAP;AAAaC,IAAAA,GAAG,EAAE;AAAlB,GANE;AAOtBC,EAAAA,YAAY,EAAE,UAPQ;AAQtBC,EAAAA,aAAa,EAAE;AARO,CAAxB;;AAWe,SAASC,UAAT,CAAoBC,OAApB,QAAoD;AAAA,MAAhBC,OAAgB,QAAhBA,OAAgB;AACjED,EAAAA,OAAO,GAAG,mBAAM,EAAN,EAAUf,eAAV,EAA2Be,OAA3B,CAAV,CADiE,CAGjE;;AACA,MAAME,gBAAgB,GAAG,iBAAID,OAAJ,EAAaE,CAAC,IAAIA,CAAC,CAACC,IAApB,CAAzB;;AACA,MAAI,CAAC,sBAASF,gBAAT,EAA2BF,OAAO,CAACd,OAAR,CAAgBC,OAA3C,CAAL,EAA0D;AACxDa,IAAAA,OAAO,CAACd,OAAR,CAAgBC,OAAhB,GAA0B,IAA1B;AACD;;AACD,MAAI,CAAC,sBAASe,gBAAT,EAA2BF,OAAO,CAACX,QAAR,CAAiBF,OAA5C,CAAL,EAA2D;AACzDa,IAAAA,OAAO,CAACX,QAAR,CAAiBF,OAAjB,GAA2B,IAA3B;AACD;;AACD,MAAI,CAAC,sBAASe,gBAAT,EAA2BF,OAAO,CAACT,UAAR,CAAmBJ,OAA9C,CAAL,EAA6D;AAC3Da,IAAAA,OAAO,CAACT,UAAR,CAAmBJ,OAAnB,GAA6B,IAA7B;AACD;;AAED,MAAI,CAAC,sBAASa,OAAO,CAACP,UAAjB,CAAL,EAAmC;AACjCO,IAAAA,OAAO,CAACP,UAAR,GAAqBR,eAAe,CAACQ,UAArC;AACD;;AACD,MAAIO,OAAO,CAACP,UAAR,GAAqB,CAAzB,EAA4B;AAC1BO,IAAAA,OAAO,CAACP,UAAR,GAAqB,CAArB;AACD;;AAED,MAAIO,OAAO,CAACV,QAAZ,EAAsB;AACpBU,IAAAA,OAAO,CAACT,UAAR,CAAmBJ,OAAnB,GAA6Ba,OAAO,CAACX,QAAR,CAAiBF,OAA9C;AACAa,IAAAA,OAAO,CAACT,UAAR,CAAmBC,OAAnB,GAA6B,IAA7B;AACD;;AAED,SAAOQ,OAAP;AACD","sourcesContent":["import { isFinite, map, merge, includes } from \"lodash\";\n\nconst DEFAULT_OPTIONS = {\n  stepCol: { colName: null, displayAs: \"Steps\" },\n  valueCol: { colName: null, displayAs: \"Value\" },\n  autoSort: true,\n  sortKeyCol: { colName: null, reverse: false },\n  itemsLimit: 100,\n  percentValuesRange: { min: 0.01, max: 1000.0 },\n  numberFormat: \"0,0[.]00\",\n  percentFormat: \"0[.]00%\",\n};\n\nexport default function getOptions(options: any, { columns }: any) {\n  options = merge({}, DEFAULT_OPTIONS, options);\n\n  // Validate\n  const availableColumns = map(columns, c => c.name);\n  if (!includes(availableColumns, options.stepCol.colName)) {\n    options.stepCol.colName = null;\n  }\n  if (!includes(availableColumns, options.valueCol.colName)) {\n    options.valueCol.colName = null;\n  }\n  if (!includes(availableColumns, options.sortKeyCol.colName)) {\n    options.sortKeyCol.colName = null;\n  }\n\n  if (!isFinite(options.itemsLimit)) {\n    options.itemsLimit = DEFAULT_OPTIONS.itemsLimit;\n  }\n  if (options.itemsLimit < 2) {\n    options.itemsLimit = 2;\n  }\n\n  if (options.autoSort) {\n    options.sortKeyCol.colName = options.valueCol.colName;\n    options.sortKeyCol.reverse = true;\n  }\n\n  return options;\n}\n"],"file":"getOptions.js"}