{"version":3,"sources":["../../../src/visualizations/word-cloud/Editor.tsx"],"names":["Editor","options","data","onOptionsChange","optionsChanged","newOptions","column","columns","name","frequenciesColumn","wordLengthLimit","min","value","max","wordCountLimit","propTypes","EditorPropTypes"],"mappings":"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","sourcesContent":["import { map, merge } from \"lodash\";\nimport React from \"react\";\nimport * as Grid from \"antd/lib/grid\";\nimport { Section, Select, InputNumber, ControlLabel } from \"@/components/visualizations/editor\";\nimport { EditorPropTypes } from \"@/visualizations/prop-types\";\n\nexport default function Editor({ options, data, onOptionsChange }: any) {\n  const optionsChanged = (newOptions: any) => {\n    onOptionsChange(merge({}, options, newOptions));\n  };\n\n  return (\n    <React.Fragment>\n      {/* @ts-expect-error ts-migrate(2745) FIXME: This JSX tag's 'children' prop expects type 'never... Remove this comment to see the full error message */}\n      <Section>\n        <Select\n          label=\"Words Column\"\n          data-test=\"WordCloud.WordsColumn\"\n          value={options.column}\n          onChange={(column: any) => optionsChanged({ column })}>\n          {map(data.columns, ({ name }) => (\n            // @ts-expect-error ts-migrate(2339) FIXME: Property 'Option' does not exist on type '({ class... Remove this comment to see the full error message\n            <Select.Option key={name} data-test={\"WordCloud.WordsColumn.\" + name}>\n              {name}\n              {/* @ts-expect-error ts-migrate(2339) FIXME: Property 'Option' does not exist on type '({ class... Remove this comment to see the full error message */}\n            </Select.Option>\n          ))}\n        </Select>\n      </Section>\n      {/* @ts-expect-error ts-migrate(2745) FIXME: This JSX tag's 'children' prop expects type 'never... Remove this comment to see the full error message */}\n      <Section>\n        <Select\n          label=\"Frequencies Column\"\n          data-test=\"WordCloud.FrequenciesColumn\"\n          value={options.frequenciesColumn}\n          onChange={(frequenciesColumn: any) => optionsChanged({ frequenciesColumn })}>\n          {/* @ts-expect-error ts-migrate(2339) FIXME: Property 'Option' does not exist on type '({ class... Remove this comment to see the full error message */}\n          <Select.Option key=\"none\" value=\"\">\n            <i>(count word frequencies automatically)</i>\n            {/* @ts-expect-error ts-migrate(2339) FIXME: Property 'Option' does not exist on type '({ class... Remove this comment to see the full error message */}\n          </Select.Option>\n          {map(data.columns, ({ name }) => (\n            // @ts-expect-error ts-migrate(2339) FIXME: Property 'Option' does not exist on type '({ class... Remove this comment to see the full error message\n            <Select.Option key={\"column-\" + name} value={name} data-test={\"WordCloud.FrequenciesColumn.\" + name}>\n              {name}\n              {/* @ts-expect-error ts-migrate(2339) FIXME: Property 'Option' does not exist on type '({ class... Remove this comment to see the full error message */}\n            </Select.Option>\n          ))}\n        </Select>\n      </Section>\n      {/* @ts-expect-error ts-migrate(2745) FIXME: This JSX tag's 'children' prop expects type 'never... Remove this comment to see the full error message */}\n      <Section>\n        {/* @ts-expect-error ts-migrate(2322) FIXME: Type 'string' is not assignable to type 'null | un... Remove this comment to see the full error message */}\n        <ControlLabel label=\"Words Length Limit\">\n          {/* @ts-expect-error ts-migrate(2322) FIXME: Type 'Element' is not assignable to type 'null | u... Remove this comment to see the full error message */}\n          <Grid.Row gutter={15} type=\"flex\">\n            <Grid.Col span={12}>\n              <InputNumber\n                data-test=\"WordCloud.WordLengthLimit.Min\"\n                placeholder=\"Min\"\n                min={0}\n                value={options.wordLengthLimit.min}\n                onChange={(value: any) => optionsChanged({ wordLengthLimit: { min: value > 0 ? value : null } })}\n              />\n            </Grid.Col>\n            <Grid.Col span={12}>\n              <InputNumber\n                data-test=\"WordCloud.WordLengthLimit.Max\"\n                placeholder=\"Max\"\n                min={0}\n                value={options.wordLengthLimit.max}\n                onChange={(value: any) => optionsChanged({ wordLengthLimit: { max: value > 0 ? value : null } })}\n              />\n            </Grid.Col>\n          </Grid.Row>\n        </ControlLabel>\n      </Section>\n      {/* @ts-expect-error ts-migrate(2745) FIXME: This JSX tag's 'children' prop expects type 'never... Remove this comment to see the full error message */}\n      <Section>\n        {/* @ts-expect-error ts-migrate(2322) FIXME: Type 'string' is not assignable to type 'null | un... Remove this comment to see the full error message */}\n        <ControlLabel label=\"Frequencies Limit\">\n          {/* @ts-expect-error ts-migrate(2322) FIXME: Type 'Element' is not assignable to type 'null | u... Remove this comment to see the full error message */}\n          <Grid.Row gutter={15} type=\"flex\">\n            <Grid.Col span={12}>\n              <InputNumber\n                data-test=\"WordCloud.WordCountLimit.Min\"\n                placeholder=\"Min\"\n                min={0}\n                value={options.wordCountLimit.min}\n                onChange={(value: any) => optionsChanged({ wordCountLimit: { min: value > 0 ? value : null } })}\n              />\n            </Grid.Col>\n            <Grid.Col span={12}>\n              <InputNumber\n                data-test=\"WordCloud.WordCountLimit.Max\"\n                placeholder=\"Max\"\n                min={0}\n                value={options.wordCountLimit.max}\n                onChange={(value: any) => optionsChanged({ wordCountLimit: { max: value > 0 ? value : null } })}\n              />\n            </Grid.Col>\n          </Grid.Row>\n        </ControlLabel>\n      </Section>\n    </React.Fragment>\n  );\n}\n\nEditor.propTypes = EditorPropTypes;\n"],"file":"Editor.js"}