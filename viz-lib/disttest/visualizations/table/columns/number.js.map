{"version":3,"sources":["../../../../src/visualizations/table/columns/number.tsx"],"names":["Editor","column","onChange","onChangeDebounced","numberFormat","event","target","value","initNumberColumn","format","prepareData","row","text","name","NumberColumn","friendlyName"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;;;;;;;;;;;;;;;AAUA,SAASA,MAAT,OAA6C;AAAA,MAA3BC,MAA2B,QAA3BA,MAA2B;AAAA,MAAnBC,QAAmB,QAAnBA,QAAmB;;AAAA,8BACf,uCAAqBA,QAArB,EAA+B,GAA/B,CADe;AAAA;AAAA,MACpCC,iBADoC;;AAG3C;AAAA;AACE;AACA,iCAAC,eAAD,qBACE,6BAAC,aAAD;AACE,MAAA,KAAK,eACH,6BAAC,cAAD,CAAO,QAAP,sCAEE,6BAAC,mBAAD,CAAa,iBAAb,OAFF,CAFJ;AAOE,mBAAU,kCAPZ;AAQE,MAAA,YAAY,EAAEF,MAAM,CAACG,YARvB;AASE,MAAA,QAAQ,EAAGC,KAAD,IAAgBF,iBAAiB,CAAC;AAAEC,QAAAA,YAAY,EAAEC,KAAK,CAACC,MAAN,CAAaC;AAA7B,OAAD;AAT7C,MADF;AAFF;AAgBD;;AAEc,SAASC,gBAAT,CAA0BP,MAA1B,EAAuC;AACpD,MAAMQ,MAAM,GAAG,wCAAsBR,MAAM,CAACG,YAA7B,CAAf;;AAEA,WAASM,WAAT,CAAqBC,GAArB,EAA+B;AAC7B,WAAO;AACLC,MAAAA,IAAI,EAAEH,MAAM,CAACE,GAAG,CAACV,MAAM,CAACY,IAAR,CAAJ;AADP,KAAP;AAGD;;AAED,WAASC,YAAT,QAAoC;AAAA,QAAZH,GAAY,SAAZA,GAAY;;AAClC;AADkC,uBAEjBD,WAAW,CAACC,GAAD,CAFM;AAAA,QAE1BC,IAF0B,gBAE1BA,IAF0B;;AAGlC,WAAOA,IAAP;AACD;;AAEDE,EAAAA,YAAY,CAACJ,WAAb,GAA2BA,WAA3B;AAEA,SAAOI,YAAP;AACD;;AAEDN,gBAAgB,CAACO,YAAjB,GAAgC,QAAhC;AACAP,gBAAgB,CAACR,MAAjB,GAA0BA,MAA1B","sourcesContent":["import React from \"react\";\nimport { useDebouncedCallback } from \"use-debounce\";\nimport { Section, Input, ContextHelp } from \"@/components/visualizations/editor\";\nimport { createNumberFormatter } from \"@/lib/value-format\";\n\ntype Props = {\n  column: {\n    name: string;\n    numberFormat?: string;\n  };\n  onChange: (...args: any[]) => any;\n};\n\nfunction Editor({ column, onChange }: Props) {\n  const [onChangeDebounced] = useDebouncedCallback(onChange, 200);\n\n  return (\n    // @ts-expect-error ts-migrate(2745) FIXME: This JSX tag's 'children' prop expects type 'never... Remove this comment to see the full error message\n    <Section>\n      <Input\n        label={\n          <React.Fragment>\n            Number format\n            <ContextHelp.NumberFormatSpecs />\n          </React.Fragment>\n        }\n        data-test=\"Table.ColumnEditor.Number.Format\"\n        defaultValue={column.numberFormat}\n        onChange={(event: any) => onChangeDebounced({ numberFormat: event.target.value })}\n      />\n    </Section>\n  );\n}\n\nexport default function initNumberColumn(column: any) {\n  const format = createNumberFormatter(column.numberFormat);\n\n  function prepareData(row: any) {\n    return {\n      text: format(row[column.name]),\n    };\n  }\n\n  function NumberColumn({ row }: any) {\n    // eslint-disable-line react/prop-types\n    const { text } = prepareData(row);\n    return text;\n  }\n\n  NumberColumn.prepareData = prepareData;\n\n  return NumberColumn;\n}\n\ninitNumberColumn.friendlyName = \"Number\";\ninitNumberColumn.Editor = Editor;\n"],"file":"number.js"}