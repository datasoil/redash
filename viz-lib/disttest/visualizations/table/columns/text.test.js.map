{"version":3,"sources":["../../../../src/visualizations/table/columns/text.test.tsx"],"names":["findByTestID","wrapper","testId","find","mount","column","done","enzyme","changedColumn","expect","toMatchSnapshot","describe","test","el","name","allowHTML","highlightLinks","last","simulate","target","checked"],"mappings":";;AAAA;;AACA;;AAEA;;;;AAEA,SAASA,YAAT,CAAsBC,OAAtB,EAAoCC,MAApC,EAAiD;AAC/C,SAAOD,OAAO,CAACE,IAAR,wBAA4BD,MAA5B,SAAP;AACD;;AAED,SAASE,KAAT,CAAeC,MAAf,EAA4BC,IAA5B,EAAuC;AACrC,SAAOC,gBAAOH,KAAP,eACL,6BAAC,aAAD,CAAQ,MAAR;AACE;AACA,IAAA,iBAAiB,EAAC,MAFpB;AAGE,IAAA,MAAM,EAAEC,MAHV;AAIE,IAAA,QAAQ,EAAEG,aAAa,IAAI;AACzBC,MAAAA,MAAM,CAACD,aAAD,CAAN,CAAsBE,eAAtB;AACAJ,MAAAA,IAAI;AACL;AAPH,IADK,CAAP;AAWD;;AAEDK,QAAQ,CAAC,4CAAD,EAA+C,MAAM;AAC3DA,EAAAA,QAAQ,CAAC,QAAD,EAAW,MAAM;AACvBC,IAAAA,IAAI,CAAC,sBAAD,EAAyBN,IAAI,IAAI;AACnC,UAAMO,EAAE,GAAGT,KAAK,CACd;AACEU,QAAAA,IAAI,EAAE,GADR;AAEEC,QAAAA,SAAS,EAAE,KAFb;AAGEC,QAAAA,cAAc,EAAE;AAHlB,OADc,EAMdV,IANc,CAAhB;AASAN,MAAAA,YAAY,CAACa,EAAD,EAAK,mCAAL,CAAZ,CACGI,IADH,GAEGd,IAFH,CAEQ,OAFR,EAGGe,QAHH,CAGY,QAHZ,EAGsB;AAAEC,QAAAA,MAAM,EAAE;AAAEC,UAAAA,OAAO,EAAE;AAAX;AAAV,OAHtB;AAID,KAdG,CAAJ;AAgBAR,IAAAA,IAAI,CAAC,gCAAD,EAAmCN,IAAI,IAAI;AAC7C,UAAMO,EAAE,GAAGT,KAAK,CACd;AACEU,QAAAA,IAAI,EAAE,GADR;AAEEC,QAAAA,SAAS,EAAE,IAFb;AAGEC,QAAAA,cAAc,EAAE;AAHlB,OADc,EAMdV,IANc,CAAhB;AASAN,MAAAA,YAAY,CAACa,EAAD,EAAK,wCAAL,CAAZ,CACGI,IADH,GAEGd,IAFH,CAEQ,OAFR,EAGGe,QAHH,CAGY,QAHZ,EAGsB;AAAEC,QAAAA,MAAM,EAAE;AAAEC,UAAAA,OAAO,EAAE;AAAX;AAAV,OAHtB;AAID,KAdG,CAAJ;AAeD,GAhCO,CAAR;AAiCD,CAlCO,CAAR","sourcesContent":["import React from \"react\";\nimport enzyme from \"enzyme\";\n\nimport Column from \"./text\";\n\nfunction findByTestID(wrapper: any, testId: any) {\n  return wrapper.find(`[data-test=\"${testId}\"]`);\n}\n\nfunction mount(column: any, done: any) {\n  return enzyme.mount(\n    <Column.Editor\n      // @ts-expect-error ts-migrate(2322) FIXME: Type '{ visualizationName: string; column: any; on... Remove this comment to see the full error message\n      visualizationName=\"Test\"\n      column={column}\n      onChange={changedColumn => {\n        expect(changedColumn).toMatchSnapshot();\n        done();\n      }}\n    />\n  );\n}\n\ndescribe(\"Visualizations -> Table -> Columns -> Text\", () => {\n  describe(\"Editor\", () => {\n    test(\"Enables HTML content\", done => {\n      const el = mount(\n        {\n          name: \"a\",\n          allowHTML: false,\n          highlightLinks: false,\n        },\n        done\n      );\n\n      findByTestID(el, \"Table.ColumnEditor.Text.AllowHTML\")\n        .last()\n        .find(\"input\")\n        .simulate(\"change\", { target: { checked: true } });\n    });\n\n    test(\"Enables highlight links option\", done => {\n      const el = mount(\n        {\n          name: \"a\",\n          allowHTML: true,\n          highlightLinks: false,\n        },\n        done\n      );\n\n      findByTestID(el, \"Table.ColumnEditor.Text.HighlightLinks\")\n        .last()\n        .find(\"input\")\n        .simulate(\"change\", { target: { checked: true } });\n    });\n  });\n});\n"],"file":"text.test.js"}