{"version":3,"sources":["../../../../src/visualizations/table/columns/boolean.test.tsx"],"names":["findByTestID","wrapper","testId","find","mount","column","done","enzyme","changedColumn","expect","toMatchSnapshot","describe","test","el","name","booleanValues","last","simulate","target","value"],"mappings":";;AAAA;;AACA;;AAEA;;;;AAEA,SAASA,YAAT,CAAsBC,OAAtB,EAAoCC,MAApC,EAAiD;AAC/C,SAAOD,OAAO,CAACE,IAAR,wBAA4BD,MAA5B,SAAP;AACD;;AAED,SAASE,KAAT,CAAeC,MAAf,EAA4BC,IAA5B,EAAuC;AACrC,SAAOC,gBAAOH,KAAP,eACL,6BAAC,gBAAD,CAAQ,MAAR;AACE;AACA,IAAA,iBAAiB,EAAC,MAFpB;AAGE,IAAA,MAAM,EAAEC,MAHV;AAIE,IAAA,QAAQ,EAAEG,aAAa,IAAI;AACzBC,MAAAA,MAAM,CAACD,aAAD,CAAN,CAAsBE,eAAtB;AACAJ,MAAAA,IAAI;AACL;AAPH,IADK,CAAP;AAWD;;AAEDK,QAAQ,CAAC,+CAAD,EAAkD,MAAM;AAC9DA,EAAAA,QAAQ,CAAC,QAAD,EAAW,MAAM;AACvBC,IAAAA,IAAI,CAAC,yBAAD,EAA4BN,IAAI,IAAI;AACtC,UAAMO,EAAE,GAAGT,KAAK,CACd;AACEU,QAAAA,IAAI,EAAE,GADR;AAEEC,QAAAA,aAAa,EAAE,CAAC,OAAD,EAAU,MAAV;AAFjB,OADc,EAKdT,IALc,CAAhB;AAQAN,MAAAA,YAAY,CAACa,EAAD,EAAK,kCAAL,CAAZ,CACGG,IADH,GAEGb,IAFH,CAEQ,OAFR,EAGGc,QAHH,CAGY,QAHZ,EAGsB;AAAEC,QAAAA,MAAM,EAAE;AAAEC,UAAAA,KAAK,EAAE;AAAT;AAAV,OAHtB;AAID,KAbG,CAAJ;AAeAP,IAAAA,IAAI,CAAC,wBAAD,EAA2BN,IAAI,IAAI;AACrC,UAAMO,EAAE,GAAGT,KAAK,CACd;AACEU,QAAAA,IAAI,EAAE,GADR;AAEEC,QAAAA,aAAa,EAAE,CAAC,OAAD,EAAU,MAAV;AAFjB,OADc,EAKdT,IALc,CAAhB;AAQAN,MAAAA,YAAY,CAACa,EAAD,EAAK,iCAAL,CAAZ,CACGG,IADH,GAEGb,IAFH,CAEQ,OAFR,EAGGc,QAHH,CAGY,QAHZ,EAGsB;AAAEC,QAAAA,MAAM,EAAE;AAAEC,UAAAA,KAAK,EAAE;AAAT;AAAV,OAHtB;AAID,KAbG,CAAJ;AAcD,GA9BO,CAAR;AA+BD,CAhCO,CAAR","sourcesContent":["import React from \"react\";\nimport enzyme from \"enzyme\";\n\nimport Column from \"./boolean\";\n\nfunction findByTestID(wrapper: any, testId: any) {\n  return wrapper.find(`[data-test=\"${testId}\"]`);\n}\n\nfunction mount(column: any, done: any) {\n  return enzyme.mount(\n    <Column.Editor\n      // @ts-expect-error ts-migrate(2322) FIXME: Type '{ visualizationName: string; column: any; on... Remove this comment to see the full error message\n      visualizationName=\"Test\"\n      column={column}\n      onChange={changedColumn => {\n        expect(changedColumn).toMatchSnapshot();\n        done();\n      }}\n    />\n  );\n}\n\ndescribe(\"Visualizations -> Table -> Columns -> Boolean\", () => {\n  describe(\"Editor\", () => {\n    test(\"Changes value for FALSE\", done => {\n      const el = mount(\n        {\n          name: \"a\",\n          booleanValues: [\"false\", \"true\"],\n        },\n        done\n      );\n\n      findByTestID(el, \"Table.ColumnEditor.Boolean.False\")\n        .last()\n        .find(\"input\")\n        .simulate(\"change\", { target: { value: \"no\" } });\n    });\n\n    test(\"Changes value for TRUE\", done => {\n      const el = mount(\n        {\n          name: \"a\",\n          booleanValues: [\"false\", \"true\"],\n        },\n        done\n      );\n\n      findByTestID(el, \"Table.ColumnEditor.Boolean.True\")\n        .last()\n        .find(\"input\")\n        .simulate(\"change\", { target: { value: \"yes\" } });\n    });\n  });\n});\n"],"file":"boolean.test.js"}