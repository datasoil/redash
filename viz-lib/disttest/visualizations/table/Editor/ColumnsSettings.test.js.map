{"version":3,"sources":["../../../../src/visualizations/table/Editor/ColumnsSettings.test.tsx"],"names":["findByTestID","wrapper","testId","find","mount","options","done","data","columns","name","type","rows","a","enzyme","changedOptions","expect","toMatchSnapshot","describe","test","el","last","simulate","target","value","checked"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport enzyme from \"enzyme\";\n\nimport getOptions from \"../getOptions\";\nimport ColumnsSettings from \"./ColumnsSettings\";\n\nfunction findByTestID(wrapper: any, testId: any) {\n  return wrapper.find(`[data-test=\"${testId}\"]`);\n}\n\nfunction mount(options: any, done: any) {\n  const data = {\n    columns: [{ name: \"a\", type: \"string\" }],\n    rows: [{ a: \"test\" }],\n  };\n  options = getOptions(options, data);\n  return enzyme.mount(\n    <ColumnsSettings\n      visualizationName=\"Test\"\n      data={data}\n      options={options}\n      onOptionsChange={changedOptions => {\n        expect(changedOptions).toMatchSnapshot();\n        done();\n      }}\n    />\n  );\n}\n\ndescribe(\"Visualizations -> Table -> Editor -> Columns Settings\", () => {\n  test(\"Toggles column visibility\", done => {\n    const el = mount({}, done);\n\n    findByTestID(el, \"Table.Column.a.Visibility\")\n      .last()\n      .simulate(\"click\");\n  });\n\n  test(\"Changes column title\", done => {\n    const el = mount({}, done);\n    findByTestID(el, \"Table.Column.a.Name\")\n      .last()\n      .simulate(\"click\"); // expand settings\n\n    findByTestID(el, \"Table.Column.a.Title\")\n      .last()\n      .simulate(\"change\", { target: { value: \"test\" } });\n  });\n\n  test(\"Changes column alignment\", done => {\n    const el = mount({}, done);\n    findByTestID(el, \"Table.Column.a.Name\")\n      .last()\n      .simulate(\"click\"); // expand settings\n\n    findByTestID(el, \"Table.Column.a.TextAlignment\")\n      .last()\n      .find('[data-test=\"TextAlignmentSelect.Right\"] input')\n      .simulate(\"change\", { target: { checked: true } });\n  });\n\n  test(\"Enables search by column data\", done => {\n    const el = mount({}, done);\n    findByTestID(el, \"Table.Column.a.Name\")\n      .last()\n      .simulate(\"click\"); // expand settings\n\n    findByTestID(el, \"Table.Column.a.UseForSearch\")\n      .last()\n      .find(\"input\")\n      .simulate(\"change\", { target: { checked: true } });\n  });\n\n  test(\"Changes column display type\", done => {\n    const el = mount({}, done);\n    findByTestID(el, \"Table.Column.a.Name\")\n      .last()\n      .simulate(\"click\"); // expand settings\n\n    findByTestID(el, \"Table.Column.a.DisplayAs\")\n      .last()\n      .simulate(\"mouseDown\");\n    findByTestID(el, \"Table.Column.a.DisplayAs.number\")\n      .last()\n      .simulate(\"click\");\n  });\n});\n"],"file":"ColumnsSettings.test.js"}