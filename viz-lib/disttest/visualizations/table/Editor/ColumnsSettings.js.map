{"version":3,"sources":["../../../../src/visualizations/table/Editor/ColumnsSettings.tsx"],"names":["Text","Typography","SortableItem","Collapse","Panel","ColumnsSettings","options","onOptionsChange","handleColumnChange","newColumn","event","stopPropagation","columns","c","name","handleColumnsReorder","oldIndex","newIndex","splice","container","firstChild","className","column","index","title","marginLeft","visible","propTypes","EditorPropTypes"],"mappings":"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","sourcesContent":["import { map } from \"lodash\";\nimport React from \"react\";\nimport Collapse from \"antd/lib/collapse\";\nimport Tooltip from \"antd/lib/tooltip\";\nimport Typography from \"antd/lib/typography\";\n// @ts-expect-error ts-migrate(2724) FIXME: Module '\"../../../../node_modules/react-sortable-h... Remove this comment to see the full error message\nimport { sortableElement } from \"react-sortable-hoc\";\nimport { SortableContainer, DragHandle } from \"@/components/sortable\";\nimport { EditorPropTypes } from \"@/visualizations/prop-types\";\n\nimport EyeOutlinedIcon from \"@ant-design/icons/EyeOutlined\";\nimport EyeInvisibleOutlinedIcon from \"@ant-design/icons/EyeInvisibleOutlined\";\n\nimport ColumnEditor from \"./ColumnEditor\";\n\nconst { Text } = Typography;\n\nconst SortableItem = sortableElement(Collapse.Panel);\n\nexport default function ColumnsSettings({ options, onOptionsChange }: any) {\n  function handleColumnChange(newColumn: any, event: any) {\n    if (event) {\n      event.stopPropagation();\n    }\n    const columns = map(options.columns, c => (c.name === newColumn.name ? newColumn : c));\n    onOptionsChange({ columns });\n  }\n\n  function handleColumnsReorder({ oldIndex, newIndex }: any) {\n    const columns = [...options.columns];\n    columns.splice(newIndex, 0, ...columns.splice(oldIndex, 1));\n    onOptionsChange({ columns });\n  }\n\n  return (\n    <SortableContainer\n      axis=\"y\"\n      lockAxis=\"y\"\n      useDragHandle\n      helperClass=\"table-editor-columns-dragged-item\"\n      helperContainer={(container: any) => container.firstChild}\n      onSortEnd={handleColumnsReorder}\n      containerProps={{\n        className: \"table-visualization-editor-columns\",\n      }}>\n      {/* @ts-expect-error ts-migrate(2322) FIXME: Type 'Element' is not assignable to type 'null | u... Remove this comment to see the full error message */}\n      <Collapse bordered={false} defaultActiveKey={[]} expandIconPosition=\"right\">\n        {map(options.columns, (column, index) => (\n          <SortableItem\n            key={column.name}\n            index={index}\n            header={\n              <React.Fragment>\n                <DragHandle />\n                <span data-test={`Table.Column.${column.name}.Name`}>\n                  {column.name}\n                  {column.title !== \"\" && column.title !== column.name && (\n                    <Text type=\"secondary\" style={{ marginLeft: 5 }}>\n                      <i>({column.title})</i>\n                    </Text>\n                  )}\n                </span>\n              </React.Fragment>\n            }\n            extra={\n              <Tooltip title=\"Toggle visibility\" mouseEnterDelay={0} mouseLeaveDelay={0}>\n                {column.visible ? (\n                  <EyeOutlinedIcon\n                    data-test={`Table.Column.${column.name}.Visibility`}\n                    onClick={event => handleColumnChange({ ...column, visible: !column.visible }, event)}\n                  />\n                ) : (\n                  <EyeInvisibleOutlinedIcon\n                    data-test={`Table.Column.${column.name}.Visibility`}\n                    onClick={event => handleColumnChange({ ...column, visible: !column.visible }, event)}\n                  />\n                )}\n              </Tooltip>\n            }>\n            {/* @ts-expect-error ts-migrate(2322) FIXME: Type '(newColumn: any, event: any) => void' is not... Remove this comment to see the full error message */}\n            <ColumnEditor column={column} onChange={handleColumnChange} />\n          </SortableItem>\n        ))}\n      </Collapse>\n    </SortableContainer>\n  );\n}\n\nColumnsSettings.propTypes = EditorPropTypes;\n"],"file":"ColumnsSettings.js"}