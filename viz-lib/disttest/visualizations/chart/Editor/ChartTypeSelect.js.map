{"version":3,"sources":["../../../../src/visualizations/chart/Editor/ChartTypeSelect.tsx"],"names":["allChartTypes","type","name","icon","ChartTypeSelect","hiddenChartTypes","props","chartTypes","result","visualizationsSettings","allowCustomJSVisualizations","push","length","marginRight","defaultProps"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;;;;;;;;;AAEA,IAAMA,aAAa,GAAG,CACpB;AAAEC,EAAAA,IAAI,EAAE,MAAR;AAAgBC,EAAAA,IAAI,EAAE,MAAtB;AAA8BC,EAAAA,IAAI,EAAE;AAApC,CADoB,EAEpB;AAAEF,EAAAA,IAAI,EAAE,QAAR;AAAkBC,EAAAA,IAAI,EAAE,KAAxB;AAA+BC,EAAAA,IAAI,EAAE;AAArC,CAFoB,EAGpB;AAAEF,EAAAA,IAAI,EAAE,MAAR;AAAgBC,EAAAA,IAAI,EAAE,MAAtB;AAA8BC,EAAAA,IAAI,EAAE;AAApC,CAHoB,EAIpB;AAAEF,EAAAA,IAAI,EAAE,KAAR;AAAeC,EAAAA,IAAI,EAAE,KAArB;AAA4BC,EAAAA,IAAI,EAAE;AAAlC,CAJoB,EAKpB;AAAEF,EAAAA,IAAI,EAAE,SAAR;AAAmBC,EAAAA,IAAI,EAAE,SAAzB;AAAoCC,EAAAA,IAAI,EAAE;AAA1C,CALoB,EAMpB;AAAEF,EAAAA,IAAI,EAAE,QAAR;AAAkBC,EAAAA,IAAI,EAAE,QAAxB;AAAkCC,EAAAA,IAAI,EAAE;AAAxC,CANoB,EAOpB;AAAEF,EAAAA,IAAI,EAAE,SAAR;AAAmBC,EAAAA,IAAI,EAAE,SAAzB;AAAoCC,EAAAA,IAAI,EAAE;AAA1C,CAPoB,EAQpB;AAAEF,EAAAA,IAAI,EAAE,KAAR;AAAeC,EAAAA,IAAI,EAAE,KAArB;AAA4BC,EAAAA,IAAI,EAAE;AAAlC,CARoB,CAAtB;;AAiBe,SAASC,eAAT,OAAgE;AAAA,MAArCC,gBAAqC,QAArCA,gBAAqC;AAAA,MAAhBC,KAAgB;;AAC7E,MAAMC,UAAU,GAAG,oBAAQ,MAAM;AAC/B,QAAMC,MAAM,GAAG,CAAC,GAAGR,aAAJ,CAAf;;AAEA,QAAIS,+CAAuBC,2BAA3B,EAAwD;AACtDF,MAAAA,MAAM,CAACG,IAAP,CAAY;AAAEV,QAAAA,IAAI,EAAE,QAAR;AAAkBC,QAAAA,IAAI,EAAE,QAAxB;AAAkCC,QAAAA,IAAI,EAAE;AAAxC,OAAZ;AACD;;AAED,QAAIE,gBAAgB,CAACO,MAAjB,GAA0B,CAA9B,EAAiC;AAC/B,aAAO,oBAAOJ,MAAP,EAAe;AAAA,YAAGP,IAAH,SAAGA,IAAH;AAAA,eAAc,CAAC,sBAASI,gBAAT,EAA2BJ,IAA3B,CAAf;AAAA,OAAf,CAAP;AACD;;AAED,WAAOO,MAAP;AACD,GAZkB,EAYhB,EAZgB,CAAnB;AAcA,sBACE,6BAAC,cAAD,EAAYF,KAAZ,EACG,iBAAIC,UAAJ,EAAgB;AAAA,QAAGN,IAAH,SAAGA,IAAH;AAAA,QAASC,IAAT,SAASA,IAAT;AAAA,QAAeC,IAAf,SAAeA,IAAf;AAAA;AAAA;AACf;AACA,mCAAC,cAAD,CAAQ,MAAR;AAAe,QAAA,GAAG,EAAEF,IAApB;AAA0B,QAAA,KAAK,EAAEA,IAAjC;AAAuC,+CAA8BA,IAA9B;AAAvC,sBACE;AAAG,QAAA,SAAS,kBAAWE,IAAX,CAAZ;AAA+B,QAAA,KAAK,EAAE;AAAEU,UAAAA,WAAW,EAAE;AAAf;AAAtC,QADF,EAEGX,IAFH;AAFe;AAAA,GAAhB,CADH,CADF;AAYD;;AAEDE,eAAe,CAACU,YAAhB,GAA+B;AAC7BT,EAAAA,gBAAgB,EAAE;AADW,CAA/B","sourcesContent":["import { filter, includes, map } from \"lodash\";\nimport React, { useMemo } from \"react\";\nimport { Select } from \"@/components/visualizations/editor\";\nimport { visualizationsSettings } from \"@/visualizations/visualizationsSettings\";\n\nconst allChartTypes = [\n  { type: \"line\", name: \"Line\", icon: \"line-chart\" },\n  { type: \"column\", name: \"Bar\", icon: \"bar-chart\" },\n  { type: \"area\", name: \"Area\", icon: \"area-chart\" },\n  { type: \"pie\", name: \"Pie\", icon: \"pie-chart\" },\n  { type: \"scatter\", name: \"Scatter\", icon: \"circle-o\" },\n  { type: \"bubble\", name: \"Bubble\", icon: \"circle-o\" },\n  { type: \"heatmap\", name: \"Heatmap\", icon: \"th\" },\n  { type: \"box\", name: \"Box\", icon: \"square-o\" },\n];\n\ntype OwnProps = {\n  hiddenChartTypes?: any[]; // TODO: PropTypes.oneOf(map(allChartTypes, \"type\"))\n};\n\ntype Props = OwnProps & typeof ChartTypeSelect.defaultProps;\n\nexport default function ChartTypeSelect({ hiddenChartTypes, ...props }: Props) {\n  const chartTypes = useMemo(() => {\n    const result = [...allChartTypes];\n\n    if (visualizationsSettings.allowCustomJSVisualizations) {\n      result.push({ type: \"custom\", name: \"Custom\", icon: \"code\" });\n    }\n\n    if (hiddenChartTypes.length > 0) {\n      return filter(result, ({ type }) => !includes(hiddenChartTypes, type));\n    }\n\n    return result;\n  }, []);\n\n  return (\n    <Select {...props}>\n      {map(chartTypes, ({ type, name, icon }) => (\n        // @ts-expect-error ts-migrate(2339) FIXME: Property 'Option' does not exist on type '({ class... Remove this comment to see the full error message\n        <Select.Option key={type} value={type} data-test={`Chart.ChartType.${type}`}>\n          <i className={`fa fa-${icon}`} style={{ marginRight: 5 }} />\n          {name}\n          {/* @ts-expect-error ts-migrate(2339) FIXME: Property 'Option' does not exist on type '({ class... Remove this comment to see the full error message */}\n        </Select.Option>\n      ))}\n    </Select>\n  );\n}\n\nChartTypeSelect.defaultProps = {\n  hiddenChartTypes: [],\n};\n"],"file":"ChartTypeSelect.js"}