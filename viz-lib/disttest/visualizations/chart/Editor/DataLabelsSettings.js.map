{"version":3,"sources":["../../../../src/visualizations/chart/Editor/DataLabelsSettings.tsx"],"names":["DataLabelsSettings","options","onOptionsChange","isShowDataLabelsAvailable","globalSeriesType","debouncedOnOptionsChange","showDataLabels","event","target","checked","numberFormat","e","value","percentFormat","dateTimeFormat","paddingBottom","paddingTop","whiteSpace","textFormat","propTypes","EditorPropTypes"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;;;;;;;;;;;;;;;AAEe,SAASA,kBAAT,OAA+D;AAAA,MAAjCC,OAAiC,QAAjCA,OAAiC;AAAA,MAAxBC,eAAwB,QAAxBA,eAAwB;AAC5E,MAAMC,yBAAyB,GAAG,sBAChC,CAAC,MAAD,EAAS,MAAT,EAAiB,QAAjB,EAA2B,SAA3B,EAAsC,KAAtC,EAA6C,SAA7C,CADgC,EAEhCF,OAAO,CAACG,gBAFwB,CAAlC;;AAD4E,8BAMzC,uCAAqBF,eAArB,EAAsC,GAAtC,CANyC;AAAA;AAAA,MAMrEG,wBANqE;;AAQ5E,sBACE,6BAAC,cAAD,CAAO,QAAP,QACGF,yBAAyB;AAAA;AACxB;AACA,+BAAC,eAAD,qBACE,6BAAC,gBAAD;AACE,iBAAU,iCADZ;AAEE,IAAA,cAAc,EAAEF,OAAO,CAACK,cAF1B;AAGE,IAAA,QAAQ,EAAEC,KAAK,IAAIL,eAAe,CAAC;AAAEI,MAAAA,cAAc,EAAEC,KAAK,CAACC,MAAN,CAAaC;AAA/B,KAAD;AAHpC,wBADF,CAHJ,eAcE,6BAAC,eAAD,qBACE,6BAAC,aAAD;AACE,IAAA,KAAK,eACH,6BAAC,cAAD,CAAO,QAAP,6CAEE,6BAAC,mBAAD,CAAa,iBAAb,OAFF,CAFJ;AAOE,iBAAU,+BAPZ;AAQE,IAAA,YAAY,EAAER,OAAO,CAACS,YARxB;AASE,IAAA,QAAQ,EAAGC,CAAD,IAAYN,wBAAwB,CAAC;AAAEK,MAAAA,YAAY,EAAEC,CAAC,CAACH,MAAF,CAASI;AAAzB,KAAD;AAThD,IADF,CAdF,eA6BE,6BAAC,eAAD,qBACE,6BAAC,aAAD;AACE,IAAA,KAAK,eACH,6BAAC,cAAD,CAAO,QAAP,8CAEE,6BAAC,mBAAD,CAAa,iBAAb,OAFF,CAFJ;AAOE,iBAAU,gCAPZ;AAQE,IAAA,YAAY,EAAEX,OAAO,CAACY,aARxB;AASE,IAAA,QAAQ,EAAGF,CAAD,IAAYN,wBAAwB,CAAC;AAAEQ,MAAAA,aAAa,EAAEF,CAAC,CAACH,MAAF,CAASI;AAA1B,KAAD;AAThD,IADF,CA7BF,eA4CE,6BAAC,eAAD,qBACE,6BAAC,aAAD;AACE,IAAA,KAAK,eACH,6BAAC,cAAD,CAAO,QAAP,gDAEE,6BAAC,mBAAD,CAAa,mBAAb,OAFF,CAFJ;AAOE,iBAAU,iCAPZ;AAQE,IAAA,YAAY,EAAEX,OAAO,CAACa,cARxB;AASE,IAAA,QAAQ,EAAGH,CAAD,IAAYN,wBAAwB,CAAC;AAAES,MAAAA,cAAc,EAAEH,CAAC,CAACH,MAAF,CAASI;AAA3B,KAAD;AAThD,IADF,CA5CF,eA2DE,6BAAC,eAAD,qBACE,6BAAC,aAAD;AACE,IAAA,KAAK,eACH,6BAAC,cAAD,CAAO,QAAP,oCAGE,6BAAC,mBAAD;AAAa,MAAA,SAAS,EAAC,UAAvB;AAAkC,MAAA,kBAAkB;AAApD,oBACE;AAAK,MAAA,KAAK,EAAE;AAAEG,QAAAA,aAAa,EAAE;AAAjB;AAAZ,4DADF,eAEE,uDACE,2CAAO,cAAP,CADF,kBAFF,eAKE,uDACE,2CAAO,WAAP,CADF,cALF,eAQE,uDACE,2CAAO,WAAP,CADF,cARF,eAWE,uDACE,2CAAO,kBAAP,CADF,uBAXF,eAcE,uDACE,2CAAO,gBAAP,CADF,kBAdF,eAiBE,uDACE,2CAAO,cAAP,CADF,kBAjBF,eAoBE;AAAK,MAAA,KAAK,EAAE;AAAEC,QAAAA,UAAU,EAAE;AAAd;AAAZ,wEAEE,wCAFF,wBAIE;AAAM,MAAA,KAAK,EAAE;AAAEC,QAAAA,UAAU,EAAE;AAAd;AAAb,OAAwC,mBAAxC,CAJF,aApBF,CAHF,CAFJ;AAkCE,iBAAU,6BAlCZ;AAmCE,IAAA,WAAW,EAAC,QAnCd;AAoCE,IAAA,YAAY,EAAEhB,OAAO,CAACiB,UApCxB;AAqCE,IAAA,QAAQ,EAAGP,CAAD,IAAYN,wBAAwB,CAAC;AAAEa,MAAAA,UAAU,EAAEP,CAAC,CAACH,MAAF,CAASI;AAAvB,KAAD;AArChD,IADF,CA3DF,CADF;AAuGD;;AAEDZ,kBAAkB,CAACmB,SAAnB,GAA+BC,0BAA/B","sourcesContent":["import { includes } from \"lodash\";\nimport React from \"react\";\nimport { useDebouncedCallback } from \"use-debounce\";\nimport { Section, Input, Checkbox, ContextHelp } from \"@/components/visualizations/editor\";\nimport { EditorPropTypes } from \"@/visualizations/prop-types\";\n\nexport default function DataLabelsSettings({ options, onOptionsChange }: any) {\n  const isShowDataLabelsAvailable = includes(\n    [\"line\", \"area\", \"column\", \"scatter\", \"pie\", \"heatmap\"],\n    options.globalSeriesType\n  );\n\n  const [debouncedOnOptionsChange] = useDebouncedCallback(onOptionsChange, 200);\n\n  return (\n    <React.Fragment>\n      {isShowDataLabelsAvailable && (\n        // @ts-expect-error ts-migrate(2745) FIXME: This JSX tag's 'children' prop expects type 'never... Remove this comment to see the full error message\n        <Section>\n          <Checkbox\n            data-test=\"Chart.DataLabels.ShowDataLabels\"\n            defaultChecked={options.showDataLabels}\n            onChange={event => onOptionsChange({ showDataLabels: event.target.checked })}>\n            Show Data Labels\n          </Checkbox>\n        </Section>\n      )}\n\n      {/* @ts-expect-error ts-migrate(2745) FIXME: This JSX tag's 'children' prop expects type 'never... Remove this comment to see the full error message */}\n      <Section>\n        <Input\n          label={\n            <React.Fragment>\n              Number Values Format\n              <ContextHelp.NumberFormatSpecs />\n            </React.Fragment>\n          }\n          data-test=\"Chart.DataLabels.NumberFormat\"\n          defaultValue={options.numberFormat}\n          onChange={(e: any) => debouncedOnOptionsChange({ numberFormat: e.target.value })}\n        />\n      </Section>\n\n      {/* @ts-expect-error ts-migrate(2745) FIXME: This JSX tag's 'children' prop expects type 'never... Remove this comment to see the full error message */}\n      <Section>\n        <Input\n          label={\n            <React.Fragment>\n              Percent Values Format\n              <ContextHelp.NumberFormatSpecs />\n            </React.Fragment>\n          }\n          data-test=\"Chart.DataLabels.PercentFormat\"\n          defaultValue={options.percentFormat}\n          onChange={(e: any) => debouncedOnOptionsChange({ percentFormat: e.target.value })}\n        />\n      </Section>\n\n      {/* @ts-expect-error ts-migrate(2745) FIXME: This JSX tag's 'children' prop expects type 'never... Remove this comment to see the full error message */}\n      <Section>\n        <Input\n          label={\n            <React.Fragment>\n              Date/Time Values Format\n              <ContextHelp.DateTimeFormatSpecs />\n            </React.Fragment>\n          }\n          data-test=\"Chart.DataLabels.DateTimeFormat\"\n          defaultValue={options.dateTimeFormat}\n          onChange={(e: any) => debouncedOnOptionsChange({ dateTimeFormat: e.target.value })}\n        />\n      </Section>\n\n      {/* @ts-expect-error ts-migrate(2745) FIXME: This JSX tag's 'children' prop expects type 'never... Remove this comment to see the full error message */}\n      <Section>\n        <Input\n          label={\n            <React.Fragment>\n              Data Labels\n              {/* @ts-expect-error ts-migrate(2746) FIXME: This JSX tag's 'children' prop expects a single ch... Remove this comment to see the full error message */}\n              <ContextHelp placement=\"topRight\" arrowPointAtCenter>\n                <div style={{ paddingBottom: 5 }}>Use special names to access additional properties:</div>\n                <div>\n                  <code>{\"{{ @@name }}\"}</code> series name;\n                </div>\n                <div>\n                  <code>{\"{{ @@x }}\"}</code> x-value;\n                </div>\n                <div>\n                  <code>{\"{{ @@y }}\"}</code> y-value;\n                </div>\n                <div>\n                  <code>{\"{{ @@yPercent }}\"}</code> relative y-value;\n                </div>\n                <div>\n                  <code>{\"{{ @@yError }}\"}</code> y deviation;\n                </div>\n                <div>\n                  <code>{\"{{ @@size }}\"}</code> bubble size;\n                </div>\n                <div style={{ paddingTop: 5 }}>\n                  Also, all query result columns can be referenced\n                  <br />\n                  using\n                  <code style={{ whiteSpace: \"nowrap\" }}>{\"{{ column_name }}\"}</code> syntax.\n                </div>\n              </ContextHelp>\n            </React.Fragment>\n          }\n          data-test=\"Chart.DataLabels.TextFormat\"\n          placeholder=\"(auto)\"\n          defaultValue={options.textFormat}\n          onChange={(e: any) => debouncedOnOptionsChange({ textFormat: e.target.value })}\n        />\n      </Section>\n    </React.Fragment>\n  );\n}\n\nDataLabelsSettings.propTypes = EditorPropTypes;\n"],"file":"DataLabelsSettings.js"}