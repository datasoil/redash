{"version":3,"sources":["../../../../src/visualizations/map/Editor/GroupsSettings.tsx"],"names":["GroupsSettings","options","data","onOptionsChange","groups","name","color","colors","Automatic","ColorPalette","updateGroupOption","prop","value","columns","title","dataIndex","width","render","unused","item","propTypes","EditorPropTypes"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAEA;;;;;;;;;;;;;;AAEe,SAASA,cAAT,OAAiE;AAAA,MAAvCC,OAAuC,QAAvCA,OAAuC;AAAA,MAA9BC,IAA8B,QAA9BA,IAA8B;AAAA,MAAxBC,eAAwB,QAAxBA,eAAwB;AAC9E,MAAMC,MAAM,GAAG,oBACb,MAAM,iBAAI,0BAAYF,IAAZ,EAAkBD,OAAlB,CAAJ,EAAgC;AAAA,QAAGI,IAAH,SAAGA,IAAH;AAAA,WAAe;AAAEA,MAAAA,IAAF;AAAQC,MAAAA,KAAK,EAAE,CAACL,OAAO,CAACG,MAAR,CAAeC,IAAf,KAAwB,EAAzB,EAA6BC,KAA7B,IAAsC;AAArD,KAAf;AAAA,GAAhC,CADO,EAEb,CAACJ,IAAD,EAAOD,OAAP,CAFa,CAAf;AAKA,MAAMM,MAAM,GAAG,oBACb;AACEC,IAAAA,SAAS,EAAE;AADb,KAEKC,qBAFL,CADa,EAKb,EALa,CAAf;AAQA,MAAMC,iBAAiB,GAAG,wBACxB,CAACL,IAAD,EAAOM,IAAP,EAAaC,KAAb,KAAuB;AACrBT,IAAAA,eAAe,CAAC;AACdC,MAAAA,MAAM,EAAE;AACN,SAACC,IAAD,GAAQ;AACN,WAACM,IAAD,GAAQC;AADF;AADF;AADM,KAAD,CAAf;AAOD,GATuB,EAUxB,CAACT,eAAD,CAVwB,CAA1B;AAaA,MAAMU,OAAO,GAAG,CACd;AACEC,IAAAA,KAAK,EAAE,OADT;AAEEC,IAAAA,SAAS,EAAE;AAFb,GADc,EAKd;AACED,IAAAA,KAAK,EAAE,OADT;AAEEC,IAAAA,SAAS,EAAE,OAFb;AAGEC,IAAAA,KAAK,EAAE,IAHT;AAIEC,IAAAA,MAAM,EAAE,CAACC,MAAD,EAAcC,IAAd,kBACN,6BAAC,oBAAD,CACE;AADF;AAEE,MAAA,WAAW,MAFb,CAGE;AAHF;AAIE,MAAA,YAAY,EAAEZ,MAJhB,CAKE;AALF;AAME,MAAA,SAAS,EAAC,UANZ,CAOE;AAPF;AAQE,MAAA,KAAK,EAAEY,IAAI,CAACb,KARd,CASE;AATF;AAUE,MAAA,YAAY,EAAE;AAAE,iDAAkCa,IAAI,CAACd,IAAvC;AAAF,OAVhB,CAWE;AAXF;AAYE,MAAA,QAAQ,EAAGO,KAAD,IAAgBF,iBAAiB,CAACS,IAAI,CAACd,IAAN,EAAY,OAAZ,EAAqBO,KAArB,CAZ7C,CAaE;AAbF;AAcE,MAAA,UAAU,eAAE,6BAAC,oBAAD,CAAa,KAAb;AAAmB,QAAA,KAAK,EAAEO,IAAI,CAACb,KAA/B;AAAsC,QAAA,YAAY,EAAEC;AAApD;AAdd;AALJ,GALc,CAAhB;AA8BA,sBAAO,6BAAC,cAAD;AAAO,IAAA,OAAO,EAAEM,OAAhB;AAAyB,IAAA,UAAU,EAAET,MAArC;AAA6C,IAAA,MAAM,EAAC,MAApD;AAA2D,IAAA,UAAU,EAAE,KAAvE;AAA8E,IAAA,UAAU,EAAE;AAA1F,IAAP;AACD;;AAEDJ,cAAc,CAACoB,SAAf,GAA2BC,0BAA3B","sourcesContent":["import { map } from \"lodash\";\nimport React, { useMemo, useCallback } from \"react\";\nimport Table from \"antd/lib/table\";\nimport ColorPicker from \"@/components/ColorPicker\";\nimport { EditorPropTypes } from \"@/visualizations/prop-types\";\nimport ColorPalette from \"@/visualizations/ColorPalette\";\n\nimport prepareData from \"../prepareData\";\n\nexport default function GroupsSettings({ options, data, onOptionsChange }: any) {\n  const groups = useMemo(\n    () => map(prepareData(data, options), ({ name }) => ({ name, color: (options.groups[name] || {}).color || null })),\n    [data, options]\n  );\n\n  const colors = useMemo(\n    () => ({\n      Automatic: null,\n      ...ColorPalette,\n    }),\n    []\n  );\n\n  const updateGroupOption = useCallback(\n    (name, prop, value) => {\n      onOptionsChange({\n        groups: {\n          [name]: {\n            [prop]: value,\n          },\n        },\n      });\n    },\n    [onOptionsChange]\n  );\n\n  const columns = [\n    {\n      title: \"Group\",\n      dataIndex: \"name\",\n    },\n    {\n      title: \"Color\",\n      dataIndex: \"color\",\n      width: \"1%\",\n      render: (unused: any, item: any) => (\n        <ColorPicker\n          // @ts-expect-error ts-migrate(2322) FIXME: Type 'boolean' is not assignable to type 'never'.\n          interactive\n          // @ts-expect-error ts-migrate(2322) FIXME: Type '{ \"Indian Red\": string; \"Green 2\": string; \"... Remove this comment to see the full error message\n          presetColors={colors}\n          // @ts-expect-error ts-migrate(2322) FIXME: Type 'string' is not assignable to type 'never'.\n          placement=\"topRight\"\n          // @ts-expect-error ts-migrate(2322) FIXME: Type 'any' is not assignable to type 'never'.\n          color={item.color}\n          // @ts-expect-error ts-migrate(2322) FIXME: Type 'string' is not assignable to type 'never'.\n          triggerProps={{ \"data-test\": `Map.Editor.Groups.${item.name}.Color` }}\n          // @ts-expect-error ts-migrate(2322) FIXME: Type '(value: any) => void' is not assignable to t... Remove this comment to see the full error message\n          onChange={(value: any) => updateGroupOption(item.name, \"color\", value)}\n          // @ts-expect-error ts-migrate(2322) FIXME: Type 'Element' is not assignable to type 'never'.\n          addonAfter={<ColorPicker.Label color={item.color} presetColors={colors} />}\n        />\n      ),\n    },\n  ];\n\n  return <Table columns={columns} dataSource={groups} rowKey=\"name\" showHeader={false} pagination={false} />;\n}\n\nGroupsSettings.propTypes = EditorPropTypes;\n"],"file":"GroupsSettings.js"}