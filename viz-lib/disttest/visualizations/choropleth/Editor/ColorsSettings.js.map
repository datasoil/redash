{"version":3,"sources":["../../../../src/visualizations/choropleth/Editor/ColorsSettings.tsx"],"names":["ColorsSettings","options","onOptionsChange","onOptionsChangeDebounced","clusteringMode","steps","ColorPalette","colors","min","max","noValue","background","borders","propTypes","EditorPropTypes"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { useDebouncedCallback } from \"use-debounce\";\nimport { Section, Select, InputNumber, ColorPicker } from \"@/components/visualizations/editor\";\nimport { EditorPropTypes } from \"@/visualizations/prop-types\";\nimport ColorPalette from \"../ColorPalette\";\n\nexport default function ColorsSettings({ options, onOptionsChange }: any) {\n  const [onOptionsChangeDebounced] = useDebouncedCallback(onOptionsChange, 200);\n\n  return (\n    <React.Fragment>\n      {/* @ts-expect-error ts-migrate(2745) FIXME: This JSX tag's 'children' prop expects type 'never... Remove this comment to see the full error message */}\n      <Section>\n        <Select\n          layout=\"horizontal\"\n          label=\"Clustering Mode\"\n          data-test=\"Choropleth.Editor.ClusteringMode\"\n          defaultValue={options.clusteringMode}\n          onChange={(clusteringMode: any) => onOptionsChange({ clusteringMode })}>\n          {/* @ts-expect-error ts-migrate(2339) FIXME: Property 'Option' does not exist on type '({ class... Remove this comment to see the full error message */}\n          <Select.Option value=\"q\" data-test=\"Choropleth.Editor.ClusteringMode.q\">\n            quantile\n            {/* @ts-expect-error ts-migrate(2339) FIXME: Property 'Option' does not exist on type '({ class... Remove this comment to see the full error message */}\n          </Select.Option>\n          {/* @ts-expect-error ts-migrate(2339) FIXME: Property 'Option' does not exist on type '({ class... Remove this comment to see the full error message */}\n          <Select.Option value=\"e\" data-test=\"Choropleth.Editor.ClusteringMode.e\">\n            equidistant\n            {/* @ts-expect-error ts-migrate(2339) FIXME: Property 'Option' does not exist on type '({ class... Remove this comment to see the full error message */}\n          </Select.Option>\n          {/* @ts-expect-error ts-migrate(2339) FIXME: Property 'Option' does not exist on type '({ class... Remove this comment to see the full error message */}\n          <Select.Option value=\"k\" data-test=\"Choropleth.Editor.ClusteringMode.k\">\n            k-means\n            {/* @ts-expect-error ts-migrate(2339) FIXME: Property 'Option' does not exist on type '({ class... Remove this comment to see the full error message */}\n          </Select.Option>\n        </Select>\n      </Section>\n\n      {/* @ts-expect-error ts-migrate(2745) FIXME: This JSX tag's 'children' prop expects type 'never... Remove this comment to see the full error message */}\n      <Section>\n        <InputNumber\n          layout=\"horizontal\"\n          label=\"Steps\"\n          data-test=\"Choropleth.Editor.ColorSteps\"\n          min={3}\n          max={11}\n          defaultValue={options.steps}\n          onChange={(steps: any) => onOptionsChangeDebounced({ steps })}\n        />\n      </Section>\n\n      {/* @ts-expect-error ts-migrate(2745) FIXME: This JSX tag's 'children' prop expects type 'never... Remove this comment to see the full error message */}\n      <Section>\n        <ColorPicker\n          layout=\"horizontal\"\n          label=\"Min Color\"\n          interactive\n          presetColors={ColorPalette}\n          placement=\"topRight\"\n          color={options.colors.min}\n          triggerProps={{ \"data-test\": \"Choropleth.Editor.Colors.Min\" }}\n          onChange={(min: any) => onOptionsChange({ colors: { min } })}\n          // @ts-expect-error ts-migrate(2339) FIXME: Property 'Label' does not exist on type '({ classN... Remove this comment to see the full error message\n          addonAfter={<ColorPicker.Label color={options.colors.min} presetColors={ColorPalette} />}\n        />\n      </Section>\n\n      {/* @ts-expect-error ts-migrate(2745) FIXME: This JSX tag's 'children' prop expects type 'never... Remove this comment to see the full error message */}\n      <Section>\n        <ColorPicker\n          layout=\"horizontal\"\n          label=\"Max Color\"\n          interactive\n          presetColors={ColorPalette}\n          placement=\"topRight\"\n          color={options.colors.max}\n          triggerProps={{ \"data-test\": \"Choropleth.Editor.Colors.Max\" }}\n          onChange={(max: any) => onOptionsChange({ colors: { max } })}\n          // @ts-expect-error ts-migrate(2339) FIXME: Property 'Label' does not exist on type '({ classN... Remove this comment to see the full error message\n          addonAfter={<ColorPicker.Label color={options.colors.max} presetColors={ColorPalette} />}\n        />\n      </Section>\n\n      {/* @ts-expect-error ts-migrate(2745) FIXME: This JSX tag's 'children' prop expects type 'never... Remove this comment to see the full error message */}\n      <Section>\n        <ColorPicker\n          layout=\"horizontal\"\n          label=\"No Value Color\"\n          interactive\n          presetColors={ColorPalette}\n          placement=\"topRight\"\n          color={options.colors.noValue}\n          triggerProps={{ \"data-test\": \"Choropleth.Editor.Colors.NoValue\" }}\n          onChange={(noValue: any) => onOptionsChange({ colors: { noValue } })}\n          // @ts-expect-error ts-migrate(2339) FIXME: Property 'Label' does not exist on type '({ classN... Remove this comment to see the full error message\n          addonAfter={<ColorPicker.Label color={options.colors.noValue} presetColors={ColorPalette} />}\n        />\n      </Section>\n\n      {/* @ts-expect-error ts-migrate(2745) FIXME: This JSX tag's 'children' prop expects type 'never... Remove this comment to see the full error message */}\n      <Section>\n        <ColorPicker\n          layout=\"horizontal\"\n          label=\"Background Color\"\n          interactive\n          presetColors={ColorPalette}\n          placement=\"topRight\"\n          color={options.colors.background}\n          triggerProps={{ \"data-test\": \"Choropleth.Editor.Colors.Background\" }}\n          onChange={(background: any) => onOptionsChange({ colors: { background } })}\n          // @ts-expect-error ts-migrate(2339) FIXME: Property 'Label' does not exist on type '({ classN... Remove this comment to see the full error message\n          addonAfter={<ColorPicker.Label color={options.colors.background} presetColors={ColorPalette} />}\n        />\n      </Section>\n\n      {/* @ts-expect-error ts-migrate(2745) FIXME: This JSX tag's 'children' prop expects type 'never... Remove this comment to see the full error message */}\n      <Section>\n        <ColorPicker\n          layout=\"horizontal\"\n          label=\"Borders Color\"\n          interactive\n          presetColors={ColorPalette}\n          placement=\"topRight\"\n          color={options.colors.borders}\n          triggerProps={{ \"data-test\": \"Choropleth.Editor.Colors.Borders\" }}\n          onChange={(borders: any) => onOptionsChange({ colors: { borders } })}\n          // @ts-expect-error ts-migrate(2339) FIXME: Property 'Label' does not exist on type '({ classN... Remove this comment to see the full error message\n          addonAfter={<ColorPicker.Label color={options.colors.borders} presetColors={ColorPalette} />}\n        />\n      </Section>\n    </React.Fragment>\n  );\n}\n\nColorsSettings.propTypes = EditorPropTypes;\n"],"file":"ColorsSettings.js"}