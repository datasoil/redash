{"version":3,"sources":["../../../../src/components/visualizations/editor/createTabbedEditor.tsx"],"names":["UpdateOptionsStrategy","replace","existingOptions","newOptions","shallowMerge","deepMerge","TabbedEditor","tabs","options","data","onOptionsChange","restProps","optionsChanged","updateStrategy","tab","isAvailable","key","title","Component","component","defaultProps","createTabbedEditor","TabbedEditorWrapper","props"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;;;;;;;;;AAGO,IAAMA,qBAAqB,GAAG;AACnCC,EAAAA,OAAO,EAAE,CAACC,eAAD,EAAuBC,UAAvB,KAA2C,mBAAM,EAAN,EAAUA,UAAV,CADjB;AAEnCC,EAAAA,YAAY,EAAE,CAACF,eAAD,EAAuBC,UAAvB,KAA2C,oBAAO,EAAP,EAAWD,eAAX,EAA4BC,UAA5B,CAFtB;AAGnCE,EAAAA,SAAS,EAAE,CAACH,eAAD,EAAuBC,UAAvB,KAA2C,mBAAM,EAAN,EAAUD,eAAV,EAA2BC,UAA3B;AAHnB,CAA9B;AAMP;;;;;;;AAeA;AACO,SAASG,YAAT,OAAqF;AAAA,MAA7DC,IAA6D,QAA7DA,IAA6D;AAAA,MAAvDC,OAAuD,QAAvDA,OAAuD;AAAA,MAA9CC,IAA8C,QAA9CA,IAA8C;AAAA,MAAxCC,eAAwC,QAAxCA,eAAwC;AAAA,MAApBC,SAAoB;;AAC1F,MAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACT,UAAD,EAAuE;AAAA,QAArDU,cAAqD,uEAApCb,qBAAqB,CAACK,SAAc;AAC5FK,IAAAA,eAAe,CAACG,cAAc,CAACL,OAAD,EAAUL,UAAV,CAAf,CAAf;AACD,GAFD,CAD0F,CAK1F;;;AACAI,EAAAA,IAAI,GAAG,oBAAOA,IAAP,EAAaO,GAAG,IAAK,wBAAWA,GAAG,CAACC,WAAf,IAA8BD,GAAG,CAACC,WAAJ,CAAgBP,OAAhB,EAAyBC,IAAzB,CAA9B,GAA+D,IAApF,CAAP;AAEA,sBACE,6BAAC,aAAD;AAAM,IAAA,QAAQ,EAAE,KAAhB;AAAuB,IAAA,YAAY,EAAE;AAArC,KACG,iBAAIF,IAAJ,EAAU;AAAA,QAAGS,GAAH,SAAGA,GAAH;AAAA,QAAQC,KAAR,SAAQA,KAAR;AAAA,QAA0BC,SAA1B,SAAeC,SAAf;AAAA,wBACT,6BAAC,aAAD,CAAM,OAAN;AACE,MAAA,GAAG,EAAEH,GADP;AAEE,MAAA,GAAG,eAAE;AAAM,wDAAuCA,GAAvC;AAAN,SAAqD,wBAAWC,KAAX,IAAoBA,KAAK,CAACT,OAAD,CAAzB,GAAqCS,KAA1F;AAFP,oBAGE,6BAAC,SAAD;AAAW,MAAA,OAAO,EAAET,OAApB;AAA6B,MAAA,IAAI,EAAEC,IAAnC;AAAyC,MAAA,eAAe,EAAEG;AAA1D,OAA8ED,SAA9E,EAHF,CADS;AAAA,GAAV,CADH,CADF;AAWD;;AAEDL,YAAY,CAACc,YAAb,GAA4B;AAC1Bb,EAAAA,IAAI,EAAE;AADoB,CAA5B;;AAIe,SAASc,kBAAT,CAA4Bd,IAA5B,EAAuC;AACpD,SAAO,SAASe,mBAAT,CAA6BC,KAA7B,EAAyC;AAC9C,wBAAO,6BAAC,YAAD,eAAkBA,KAAlB;AAAyB,MAAA,IAAI,EAAEhB;AAA/B,OAAP;AACD,GAFD;AAGD","sourcesContent":["import { isFunction, map, filter, extend, merge } from \"lodash\";\nimport React from \"react\";\nimport Tabs from \"antd/lib/tabs\";\nimport { EditorPropTypes } from \"@/visualizations/prop-types\";\n\nexport const UpdateOptionsStrategy = {\n  replace: (existingOptions: any, newOptions: any) => merge({}, newOptions),\n  shallowMerge: (existingOptions: any, newOptions: any) => extend({}, existingOptions, newOptions),\n  deepMerge: (existingOptions: any, newOptions: any) => merge({}, existingOptions, newOptions),\n};\n\n/*\n(ts-migrate) TODO: Migrate the remaining prop types\n...EditorPropTypes\n*/\ntype OwnProps = {\n  tabs?: {\n    key: string;\n    title: string | ((...args: any[]) => any);\n    isAvailable?: (...args: any[]) => any;\n    component: (...args: any[]) => any;\n  }[];\n};\n\ntype Props = OwnProps & typeof TabbedEditor.defaultProps;\n\n// @ts-expect-error ts-migrate(2339) FIXME: Property 'options' does not exist on type 'Props'.\nexport function TabbedEditor({ tabs, options, data, onOptionsChange, ...restProps }: Props) {\n  const optionsChanged = (newOptions: any, updateStrategy = UpdateOptionsStrategy.deepMerge) => {\n    onOptionsChange(updateStrategy(options, newOptions));\n  };\n\n  // @ts-expect-error ts-migrate(2322) FIXME: Type '(number | ((() => string) & (() => string)) ... Remove this comment to see the full error message\n  tabs = filter(tabs, tab => (isFunction(tab.isAvailable) ? tab.isAvailable(options, data) : true));\n\n  return (\n    <Tabs animated={false} tabBarGutter={20}>\n      {map(tabs, ({ key, title, component: Component }) => (\n        <Tabs.TabPane\n          key={key}\n          tab={<span data-test={`VisualizationEditor.Tabs.${key}`}>{isFunction(title) ? title(options) : title}</span>}>\n          <Component options={options} data={data} onOptionsChange={optionsChanged} {...restProps} />\n        </Tabs.TabPane>\n      ))}\n    </Tabs>\n  );\n}\n\nTabbedEditor.defaultProps = {\n  tabs: [],\n};\n\nexport default function createTabbedEditor(tabs: any) {\n  return function TabbedEditorWrapper(props: any) {\n    return <TabbedEditor {...props} tabs={tabs} />;\n  };\n}\n"],"file":"createTabbedEditor.js"}