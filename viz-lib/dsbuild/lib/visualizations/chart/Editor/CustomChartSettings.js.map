{"version":3,"sources":["../../../../src/visualizations/chart/Editor/CustomChartSettings.tsx"],"names":["defaultCustomCode","CustomChartSettings","options","onOptionsChange","customCode","event","target","value","enableConsoleLogs","autoRedraw","propTypes","EditorPropTypes"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;;;AAEA,IAAMA,iBAAiB,GAAG,6PAA1B;;AAOe,SAASC,mBAAT,OAAgE;AAAA,MAAjCC,OAAiC,QAAjCA,OAAiC;AAAA,MAAxBC,eAAwB,QAAxBA,eAAwB;AAC7E,sBACE,6BAAC,cAAD,CAAO,QAAP,qBAEE,6BAAC,eAAD,qBACE,6BAAC,gBAAD;AACE,IAAA,KAAK,EAAC,aADR;AAEE,iBAAU,mBAFZ;AAGE,IAAA,IAAI,EAAC,IAHP;AAIE,IAAA,YAAY,EAAE,mBAAMD,OAAO,CAACE,UAAd,IAA4BJ,iBAA5B,GAAgDE,OAAO,CAACE,UAJxE;AAKE,IAAA,QAAQ,EAAGC,KAAD,IAAgBF,eAAe,CAAC;AAAEC,MAAAA,UAAU,EAAEC,KAAK,CAACC,MAAN,CAAaC;AAA3B,KAAD;AAL3C,IADF,CAFF,eAaE,6BAAC,eAAD,qBAEE,6BAAC,cAAD,CACE;AADF;AAEE,iBAAU,gCAFZ,CAGE;AAHF;AAIE,IAAA,cAAc,EAAEL,OAAO,CAACM,iBAJ1B,CAKE;AALF;AAME,IAAA,QAAQ,EAAGA,iBAAD,IAA4BL,eAAe,CAAC;AAAEK,MAAAA;AAAF,KAAD;AANvD,kCAFF,CAbF,eA2BE,6BAAC,eAAD,qBAEE,6BAAC,cAAD,CACE;AADF;AAEE,IAAA,EAAE,EAAC,uCAFL,CAGE;AAHF;AAIE,iBAAU,yBAJZ,CAKE;AALF;AAME,IAAA,cAAc,EAAEN,OAAO,CAACO,UAN1B,CAOE;AAPF;AAQE,IAAA,QAAQ,EAAGA,UAAD,IAAqBN,eAAe,CAAC;AAAEM,MAAAA;AAAF,KAAD;AARhD,yBAFF,CA3BF,CADF;AA4CD;;AAEDR,mBAAmB,CAACS,SAApB,GAAgCC,0BAAhC","sourcesContent":["import { isNil, trimStart } from \"lodash\";\nimport React from \"react\";\nimport { Section, Switch, TextArea } from \"@/components/visualizations/editor\";\nimport { EditorPropTypes } from \"@/visualizations/prop-types\";\n\nconst defaultCustomCode = trimStart(`\n// Available variables are x, ys, element, and Plotly\n// Type console.log(x, ys); for more info about x and ys\n// To plot your graph call Plotly.plot(element, ...)\n// Plotly examples and docs: https://plot.ly/javascript/\n`);\n\nexport default function CustomChartSettings({ options, onOptionsChange }: any) {\n  return (\n    <React.Fragment>\n      {/* @ts-expect-error ts-migrate(2745) FIXME: This JSX tag's 'children' prop expects type 'never... Remove this comment to see the full error message */}\n      <Section>\n        <TextArea\n          label=\"Custom code\"\n          data-test=\"Chart.Custom.Code\"\n          rows=\"10\"\n          defaultValue={isNil(options.customCode) ? defaultCustomCode : options.customCode}\n          onChange={(event: any) => onOptionsChange({ customCode: event.target.value })}\n        />\n      </Section>\n\n      {/* @ts-expect-error ts-migrate(2745) FIXME: This JSX tag's 'children' prop expects type 'never... Remove this comment to see the full error message */}\n      <Section>\n        {/* @ts-expect-error ts-migrate(2745) FIXME: This JSX tag's 'children' prop expects type 'never... Remove this comment to see the full error message */}\n        <Switch\n          // @ts-expect-error ts-migrate(2322) FIXME: Type 'string' is not assignable to type 'never'.\n          data-test=\"Chart.Custom.EnableConsoleLogs\"\n          // @ts-expect-error ts-migrate(2322) FIXME: Type 'any' is not assignable to type 'never'.\n          defaultChecked={options.enableConsoleLogs}\n          // @ts-expect-error ts-migrate(2322) FIXME: Type '(enableConsoleLogs: any) => any' is not assi... Remove this comment to see the full error message\n          onChange={(enableConsoleLogs: any) => onOptionsChange({ enableConsoleLogs })}>\n          Show errors in the console\n        </Switch>\n      </Section>\n\n      {/* @ts-expect-error ts-migrate(2745) FIXME: This JSX tag's 'children' prop expects type 'never... Remove this comment to see the full error message */}\n      <Section>\n        {/* @ts-expect-error ts-migrate(2745) FIXME: This JSX tag's 'children' prop expects type 'never... Remove this comment to see the full error message */}\n        <Switch\n          // @ts-expect-error ts-migrate(2322) FIXME: Type 'string' is not assignable to type 'never'.\n          id=\"chart-editor-auto-update-custom-chart\"\n          // @ts-expect-error ts-migrate(2322) FIXME: Type 'string' is not assignable to type 'never'.\n          data-test=\"Chart.Custom.AutoUpdate\"\n          // @ts-expect-error ts-migrate(2322) FIXME: Type 'any' is not assignable to type 'never'.\n          defaultChecked={options.autoRedraw}\n          // @ts-expect-error ts-migrate(2322) FIXME: Type '(autoRedraw: any) => any' is not assignable ... Remove this comment to see the full error message\n          onChange={(autoRedraw: any) => onOptionsChange({ autoRedraw })}>\n          Auto update graph\n        </Switch>\n      </Section>\n    </React.Fragment>\n  );\n}\n\nCustomChartSettings.propTypes = EditorPropTypes;\n"],"file":"CustomChartSettings.js"}