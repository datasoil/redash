{"version":3,"sources":["../../../../src/visualizations/chart/Editor/XAxisSettings.tsx"],"names":["XAxisSettings","options","onOptionsChange","autoDetectType","xAxis","sortX","reverseX","labels","enabled","propTypes","EditorPropTypes"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AAEA;;;;AAEe,SAASA,aAAT,OAA0D;AAAA,MAAjCC,OAAiC,QAAjCA,OAAiC;AAAA,MAAxBC,eAAwB,QAAxBA,eAAwB;AACvE,sBACE,6BAAC,cAAD,CAAO,QAAP,qBACE,6BAAC,qBAAD;AACE,IAAA,EAAE,EAAC,OADL;AAEE,IAAA,QAAQ,EAAE;AAAEC,MAAAA,cAAc,EAAE;AAAlB,KAFZ;AAGE,IAAA,OAAO,EAAEF,OAAO,CAACG,KAHnB,CAIE;AAJF;AAKE,IAAA,QAAQ,EAAGA,KAAD,IAAgBF,eAAe,CAAC;AAAEE,MAAAA;AAAF,KAAD;AAL3C,IADF,eAUE,6BAAC,eAAD,qBAEE,6BAAC,cAAD,CACE;AADF;AAEE,iBAAU,kBAFZ,CAGE;AAHF;AAIE,IAAA,cAAc,EAAEH,OAAO,CAACI,KAJ1B,CAKE;AALF;AAME,IAAA,QAAQ,EAAGA,KAAD,IAAgBH,eAAe,CAAC;AAAEG,MAAAA;AAAF,KAAD;AAN3C,mBAFF,CAVF,eAwBE,6BAAC,eAAD,qBAEE,6BAAC,cAAD,CACE;AADF;AAEE,iBAAU,qBAFZ,CAGE;AAHF;AAIE,IAAA,cAAc,EAAEJ,OAAO,CAACK,QAJ1B,CAKE;AALF;AAME,IAAA,QAAQ,EAAGA,QAAD,IAAmBJ,eAAe,CAAC;AAAEI,MAAAA;AAAF,KAAD;AAN9C,qBAFF,CAxBF,eAsCE,6BAAC,eAAD,qBAEE,6BAAC,cAAD,CACE;AADF;AAEE,iBAAU,wBAFZ,CAGE;AAHF;AAIE,IAAA,cAAc,EAAEL,OAAO,CAACG,KAAR,CAAcG,MAAd,CAAqBC,OAJvC,CAKE;AALF;AAME,IAAA,QAAQ,EAAGA,OAAD,IAAkBN,eAAe,CAAC;AAAEE,MAAAA,KAAK,EAAE;AAAEG,QAAAA,MAAM,EAAE;AAAEC,UAAAA;AAAF;AAAV;AAAT,KAAD;AAN7C,mBAFF,CAtCF,CADF;AAqDD;;AAEDR,aAAa,CAACS,SAAd,GAA0BC,0BAA1B","sourcesContent":["import React from \"react\";\nimport { Section, Switch } from \"@/components/visualizations/editor\";\nimport { EditorPropTypes } from \"@/visualizations/prop-types\";\n\nimport AxisSettings from \"./AxisSettings\";\n\nexport default function XAxisSettings({ options, onOptionsChange }: any) {\n  return (\n    <React.Fragment>\n      <AxisSettings\n        id=\"XAxis\"\n        features={{ autoDetectType: true }}\n        options={options.xAxis}\n        // @ts-expect-error ts-migrate(2322) FIXME: Type '(xAxis: any) => any' is not assignable to ty... Remove this comment to see the full error message\n        onChange={(xAxis: any) => onOptionsChange({ xAxis })}\n      />\n\n      {/* @ts-expect-error ts-migrate(2745) FIXME: This JSX tag's 'children' prop expects type 'never... Remove this comment to see the full error message */}\n      <Section>\n        {/* @ts-expect-error ts-migrate(2745) FIXME: This JSX tag's 'children' prop expects type 'never... Remove this comment to see the full error message */}\n        <Switch\n          // @ts-expect-error ts-migrate(2322) FIXME: Type 'string' is not assignable to type 'never'.\n          data-test=\"Chart.XAxis.Sort\"\n          // @ts-expect-error ts-migrate(2322) FIXME: Type 'any' is not assignable to type 'never'.\n          defaultChecked={options.sortX}\n          // @ts-expect-error ts-migrate(2322) FIXME: Type '(sortX: any) => any' is not assignable to ty... Remove this comment to see the full error message\n          onChange={(sortX: any) => onOptionsChange({ sortX })}>\n          Sort Values\n        </Switch>\n      </Section>\n\n      {/* @ts-expect-error ts-migrate(2745) FIXME: This JSX tag's 'children' prop expects type 'never... Remove this comment to see the full error message */}\n      <Section>\n        {/* @ts-expect-error ts-migrate(2745) FIXME: This JSX tag's 'children' prop expects type 'never... Remove this comment to see the full error message */}\n        <Switch\n          // @ts-expect-error ts-migrate(2322) FIXME: Type 'string' is not assignable to type 'never'.\n          data-test=\"Chart.XAxis.Reverse\"\n          // @ts-expect-error ts-migrate(2322) FIXME: Type 'any' is not assignable to type 'never'.\n          defaultChecked={options.reverseX}\n          // @ts-expect-error ts-migrate(2322) FIXME: Type '(reverseX: any) => any' is not assignable to... Remove this comment to see the full error message\n          onChange={(reverseX: any) => onOptionsChange({ reverseX })}>\n          Reverse Order\n        </Switch>\n      </Section>\n\n      {/* @ts-expect-error ts-migrate(2745) FIXME: This JSX tag's 'children' prop expects type 'never... Remove this comment to see the full error message */}\n      <Section>\n        {/* @ts-expect-error ts-migrate(2745) FIXME: This JSX tag's 'children' prop expects type 'never... Remove this comment to see the full error message */}\n        <Switch\n          // @ts-expect-error ts-migrate(2322) FIXME: Type 'string' is not assignable to type 'never'.\n          data-test=\"Chart.XAxis.ShowLabels\"\n          // @ts-expect-error ts-migrate(2322) FIXME: Type 'any' is not assignable to type 'never'.\n          defaultChecked={options.xAxis.labels.enabled}\n          // @ts-expect-error ts-migrate(2322) FIXME: Type '(enabled: any) => any' is not assignable to ... Remove this comment to see the full error message\n          onChange={(enabled: any) => onOptionsChange({ xAxis: { labels: { enabled } } })}>\n          Show Labels\n        </Switch>\n      </Section>\n    </React.Fragment>\n  );\n}\n\nXAxisSettings.propTypes = EditorPropTypes;\n"],"file":"XAxisSettings.js"}