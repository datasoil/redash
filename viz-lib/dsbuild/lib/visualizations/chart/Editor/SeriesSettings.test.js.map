{"version":3,"sources":["../../../../src/visualizations/chart/Editor/SeriesSettings.test.tsx"],"names":["findByTestID","wrapper","testId","find","mount","options","done","enzyme","columns","name","type","rows","a","changedOptions","expect","toMatchSnapshot","describe","test","el","globalSeriesType","columnMapping","seriesOptions","label","yAxis","last","simulate","target","value","checked"],"mappings":";;AAAA;;AACA;;AAEA;;AACA;;;;AAEA,SAASA,YAAT,CAAsBC,OAAtB,EAAoCC,MAApC,EAAiD;AAC/C,SAAOD,OAAO,CAACE,IAAR,wBAA4BD,MAA5B,SAAP;AACD;;AAED,SAASE,KAAT,CAAeC,OAAf,EAA6BC,IAA7B,EAAwC;AACtCD,EAAAA,OAAO,GAAG,yBAAWA,OAAX,CAAV;AACA,SAAOE,gBAAOH,KAAP,eACL,6BAAC,uBAAD;AACE,IAAA,iBAAiB,EAAC,MADpB;AAEE,IAAA,IAAI,EAAE;AAAEI,MAAAA,OAAO,EAAE,CAAC;AAAEC,QAAAA,IAAI,EAAE,GAAR;AAAaC,QAAAA,IAAI,EAAE;AAAnB,OAAD,CAAX;AAA4CC,MAAAA,IAAI,EAAE,CAAC;AAAEC,QAAAA,CAAC,EAAE;AAAL,OAAD;AAAlD,KAFR;AAGE,IAAA,OAAO,EAAEP,OAHX;AAIE,IAAA,eAAe,EAAEQ,cAAc,IAAI;AACjCC,MAAAA,MAAM,CAACD,cAAD,CAAN,CAAuBE,eAAvB;AACAT,MAAAA,IAAI;AACL;AAPH,IADK,CAAP;AAWD;;AAEDU,QAAQ,CAAC,sDAAD,EAAyD,MAAM;AACrEC,EAAAA,IAAI,CAAC,qBAAD,EAAwBX,IAAI,IAAI;AAClC,QAAMY,EAAE,GAAGd,KAAK,CACd;AACEe,MAAAA,gBAAgB,EAAE,QADpB;AAEEC,MAAAA,aAAa,EAAE;AAAER,QAAAA,CAAC,EAAE;AAAL,OAFjB;AAGES,MAAAA,aAAa,EAAE;AACbT,QAAAA,CAAC,EAAE;AAAEF,UAAAA,IAAI,EAAE,QAAR;AAAkBY,UAAAA,KAAK,EAAE,GAAzB;AAA8BC,UAAAA,KAAK,EAAE;AAArC;AADU;AAHjB,KADc,EAQdjB,IARc,CAAhB;AAWAN,IAAAA,YAAY,CAACkB,EAAD,EAAK,qBAAL,CAAZ,CACGM,IADH,GAEGC,QAFH,CAEY,WAFZ;AAGAzB,IAAAA,YAAY,CAACkB,EAAD,EAAK,sBAAL,CAAZ,CACGM,IADH,GAEGC,QAFH,CAEY,OAFZ;AAGD,GAlBG,CAAJ;AAoBAR,EAAAA,IAAI,CAAC,sBAAD,EAAyBX,IAAI,IAAI;AACnC,QAAMY,EAAE,GAAGd,KAAK,CACd;AACEe,MAAAA,gBAAgB,EAAE,QADpB;AAEEC,MAAAA,aAAa,EAAE;AAAER,QAAAA,CAAC,EAAE;AAAL,OAFjB;AAGES,MAAAA,aAAa,EAAE;AACbT,QAAAA,CAAC,EAAE;AAAEF,UAAAA,IAAI,EAAE,QAAR;AAAkBY,UAAAA,KAAK,EAAE,GAAzB;AAA8BC,UAAAA,KAAK,EAAE;AAArC;AADU;AAHjB,KADc,EAQdjB,IARc,CAAhB;AAWAN,IAAAA,YAAY,CAACkB,EAAD,EAAK,sBAAL,CAAZ,CACGM,IADH,GAEGC,QAFH,CAEY,QAFZ,EAEsB;AAAEC,MAAAA,MAAM,EAAE;AAAEC,QAAAA,KAAK,EAAE;AAAT;AAAV,KAFtB;AAGD,GAfG,CAAJ;AAiBAV,EAAAA,IAAI,CAAC,qBAAD,EAAwBX,IAAI,IAAI;AAClC,QAAMY,EAAE,GAAGd,KAAK,CACd;AACEe,MAAAA,gBAAgB,EAAE,QADpB;AAEEC,MAAAA,aAAa,EAAE;AAAER,QAAAA,CAAC,EAAE;AAAL,OAFjB;AAGES,MAAAA,aAAa,EAAE;AACbT,QAAAA,CAAC,EAAE;AAAEF,UAAAA,IAAI,EAAE,QAAR;AAAkBD,UAAAA,IAAI,EAAE,GAAxB;AAA6Bc,UAAAA,KAAK,EAAE;AAApC;AADU;AAHjB,KADc,EAQdjB,IARc,CAAhB;AAWAN,IAAAA,YAAY,CAACkB,EAAD,EAAK,6BAAL,CAAZ,CACGM,IADH,GAEGrB,IAFH,CAEQ,OAFR,EAGGsB,QAHH,CAGY,QAHZ,EAGsB;AAAEC,MAAAA,MAAM,EAAE;AAAEE,QAAAA,OAAO,EAAE;AAAX;AAAV,KAHtB;AAID,GAhBG,CAAJ;AAiBD,CAvDO,CAAR","sourcesContent":["import React from \"react\";\nimport enzyme from \"enzyme\";\n\nimport getOptions from \"../getOptions\";\nimport SeriesSettings from \"./SeriesSettings\";\n\nfunction findByTestID(wrapper: any, testId: any) {\n  return wrapper.find(`[data-test=\"${testId}\"]`);\n}\n\nfunction mount(options: any, done: any) {\n  options = getOptions(options);\n  return enzyme.mount(\n    <SeriesSettings\n      visualizationName=\"Test\"\n      data={{ columns: [{ name: \"a\", type: \"string\" }], rows: [{ a: \"test\" }] }}\n      options={options}\n      onOptionsChange={changedOptions => {\n        expect(changedOptions).toMatchSnapshot();\n        done();\n      }}\n    />\n  );\n}\n\ndescribe(\"Visualizations -> Chart -> Editor -> Series Settings\", () => {\n  test(\"Changes series type\", done => {\n    const el = mount(\n      {\n        globalSeriesType: \"column\",\n        columnMapping: { a: \"y\" },\n        seriesOptions: {\n          a: { type: \"column\", label: \"a\", yAxis: 0 },\n        },\n      },\n      done\n    );\n\n    findByTestID(el, \"Chart.Series.a.Type\")\n      .last()\n      .simulate(\"mouseDown\");\n    findByTestID(el, \"Chart.ChartType.area\")\n      .last()\n      .simulate(\"click\");\n  });\n\n  test(\"Changes series label\", done => {\n    const el = mount(\n      {\n        globalSeriesType: \"column\",\n        columnMapping: { a: \"y\" },\n        seriesOptions: {\n          a: { type: \"column\", label: \"a\", yAxis: 0 },\n        },\n      },\n      done\n    );\n\n    findByTestID(el, \"Chart.Series.a.Label\")\n      .last()\n      .simulate(\"change\", { target: { value: \"test\" } });\n  });\n\n  test(\"Changes series axis\", done => {\n    const el = mount(\n      {\n        globalSeriesType: \"column\",\n        columnMapping: { a: \"y\" },\n        seriesOptions: {\n          a: { type: \"column\", name: \"a\", yAxis: 0 },\n        },\n      },\n      done\n    );\n\n    findByTestID(el, \"Chart.Series.a.UseRightAxis\")\n      .last()\n      .find(\"input\")\n      .simulate(\"change\", { target: { checked: true } });\n  });\n});\n"],"file":"SeriesSettings.test.js"}