{"version":3,"sources":["../../../../src/visualizations/counter/Editor/FormatSettings.tsx"],"names":["FormatSettings","options","data","onOptionsChange","inputsEnabled","rows","stringDecimal","stringDecChar","e","target","value","stringThouSep","stringPrefix","stringSuffix","formatTargetValue","propTypes","EditorPropTypes"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AAEA;;;;AAEe,SAASA,cAAT,OAAiE;AAAA,MAAvCC,OAAuC,QAAvCA,OAAuC;AAAA,MAA9BC,IAA8B,QAA9BA,IAA8B;AAAA,MAAxBC,eAAwB,QAAxBA,eAAwB;AAC9E,MAAMC,aAAa,GAAG,0BAAcF,IAAI,CAACG,IAAnB,EAAyBJ,OAAzB,CAAtB;AACA,sBACE,6BAAC,cAAD,CAAO,QAAP,qBAEE,6BAAC,eAAD,qBACE,6BAAC,mBAAD;AACE,IAAA,MAAM,EAAC,YADT;AAEE,IAAA,KAAK,EAAC,0BAFR;AAGE,iBAAU,iCAHZ;AAIE,IAAA,YAAY,EAAEA,OAAO,CAACK,aAJxB;AAKE,IAAA,QAAQ,EAAE,CAACF,aALb;AAME,IAAA,QAAQ,EAAGE,aAAD,IAAwBH,eAAe,CAAC;AAAEG,MAAAA;AAAF,KAAD;AANnD,IADF,CAFF,eAcE,6BAAC,eAAD,qBACE,6BAAC,aAAD;AACE,IAAA,MAAM,EAAC,YADT;AAEE,IAAA,KAAK,EAAC,8BAFR;AAGE,iBAAU,qCAHZ;AAIE,IAAA,YAAY,EAAEL,OAAO,CAACM,aAJxB;AAKE,IAAA,QAAQ,EAAE,CAACH,aALb;AAME,IAAA,QAAQ,EAAGI,CAAD,IAAYL,eAAe,CAAC;AAAEI,MAAAA,aAAa,EAAEC,CAAC,CAACC,MAAF,CAASC;AAA1B,KAAD;AANvC,IADF,CAdF,eA0BE,6BAAC,eAAD,qBACE,6BAAC,aAAD;AACE,IAAA,MAAM,EAAC,YADT;AAEE,IAAA,KAAK,EAAC,gCAFR;AAGE,iBAAU,uCAHZ;AAIE,IAAA,YAAY,EAAET,OAAO,CAACU,aAJxB;AAKE,IAAA,QAAQ,EAAE,CAACP,aALb;AAME,IAAA,QAAQ,EAAGI,CAAD,IAAYL,eAAe,CAAC;AAAEQ,MAAAA,aAAa,EAAEH,CAAC,CAACC,MAAF,CAASC;AAA1B,KAAD;AANvC,IADF,CA1BF,eAsCE,6BAAC,eAAD,qBACE,6BAAC,aAAD;AACE,IAAA,MAAM,EAAC,YADT;AAEE,IAAA,KAAK,EAAC,0BAFR;AAGE,iBAAU,iCAHZ;AAIE,IAAA,YAAY,EAAET,OAAO,CAACW,YAJxB;AAKE,IAAA,QAAQ,EAAE,CAACR,aALb;AAME,IAAA,QAAQ,EAAGI,CAAD,IAAYL,eAAe,CAAC;AAAES,MAAAA,YAAY,EAAEJ,CAAC,CAACC,MAAF,CAASC;AAAzB,KAAD;AANvC,IADF,CAtCF,eAkDE,6BAAC,eAAD,qBACE,6BAAC,aAAD;AACE,IAAA,MAAM,EAAC,YADT;AAEE,IAAA,KAAK,EAAC,0BAFR;AAGE,iBAAU,iCAHZ;AAIE,IAAA,YAAY,EAAET,OAAO,CAACY,YAJxB;AAKE,IAAA,QAAQ,EAAE,CAACT,aALb;AAME,IAAA,QAAQ,EAAGI,CAAD,IAAYL,eAAe,CAAC;AAAEU,MAAAA,YAAY,EAAEL,CAAC,CAACC,MAAF,CAASC;AAAzB,KAAD;AANvC,IADF,CAlDF,eA8DE,6BAAC,eAAD,qBAEE,6BAAC,cAAD,CACE;AADF;AAEE,iBAAU,sCAFZ,CAGE;AAHF;AAIE,IAAA,cAAc,EAAET,OAAO,CAACa,iBAJ1B,CAKE;AALF;AAME,IAAA,QAAQ,EAAGA,iBAAD,IAA4BX,eAAe,CAAC;AAAEW,MAAAA;AAAF,KAAD;AANvD,2BAFF,CA9DF,CADF;AA6ED;;AAEDd,cAAc,CAACe,SAAf,GAA2BC,0BAA3B","sourcesContent":["import React from \"react\";\nimport { Section, Input, InputNumber, Switch } from \"@/components/visualizations/editor\";\nimport { EditorPropTypes } from \"@/visualizations/prop-types\";\n\nimport { isValueNumber } from \"../utils\";\n\nexport default function FormatSettings({ options, data, onOptionsChange }: any) {\n  const inputsEnabled = isValueNumber(data.rows, options);\n  return (\n    <React.Fragment>\n      {/* @ts-expect-error ts-migrate(2745) FIXME: This JSX tag's 'children' prop expects type 'never... Remove this comment to see the full error message */}\n      <Section>\n        <InputNumber\n          layout=\"horizontal\"\n          label=\"Formatting Decimal Place\"\n          data-test=\"Counter.Formatting.DecimalPlace\"\n          defaultValue={options.stringDecimal}\n          disabled={!inputsEnabled}\n          onChange={(stringDecimal: any) => onOptionsChange({ stringDecimal })}\n        />\n      </Section>\n\n      {/* @ts-expect-error ts-migrate(2745) FIXME: This JSX tag's 'children' prop expects type 'never... Remove this comment to see the full error message */}\n      <Section>\n        <Input\n          layout=\"horizontal\"\n          label=\"Formatting Decimal Character\"\n          data-test=\"Counter.Formatting.DecimalCharacter\"\n          defaultValue={options.stringDecChar}\n          disabled={!inputsEnabled}\n          onChange={(e: any) => onOptionsChange({ stringDecChar: e.target.value })}\n        />\n      </Section>\n\n      {/* @ts-expect-error ts-migrate(2745) FIXME: This JSX tag's 'children' prop expects type 'never... Remove this comment to see the full error message */}\n      <Section>\n        <Input\n          layout=\"horizontal\"\n          label=\"Formatting Thousands Separator\"\n          data-test=\"Counter.Formatting.ThousandsSeparator\"\n          defaultValue={options.stringThouSep}\n          disabled={!inputsEnabled}\n          onChange={(e: any) => onOptionsChange({ stringThouSep: e.target.value })}\n        />\n      </Section>\n\n      {/* @ts-expect-error ts-migrate(2745) FIXME: This JSX tag's 'children' prop expects type 'never... Remove this comment to see the full error message */}\n      <Section>\n        <Input\n          layout=\"horizontal\"\n          label=\"Formatting String Prefix\"\n          data-test=\"Counter.Formatting.StringPrefix\"\n          defaultValue={options.stringPrefix}\n          disabled={!inputsEnabled}\n          onChange={(e: any) => onOptionsChange({ stringPrefix: e.target.value })}\n        />\n      </Section>\n\n      {/* @ts-expect-error ts-migrate(2745) FIXME: This JSX tag's 'children' prop expects type 'never... Remove this comment to see the full error message */}\n      <Section>\n        <Input\n          layout=\"horizontal\"\n          label=\"Formatting String Suffix\"\n          data-test=\"Counter.Formatting.StringSuffix\"\n          defaultValue={options.stringSuffix}\n          disabled={!inputsEnabled}\n          onChange={(e: any) => onOptionsChange({ stringSuffix: e.target.value })}\n        />\n      </Section>\n\n      {/* @ts-expect-error ts-migrate(2745) FIXME: This JSX tag's 'children' prop expects type 'never... Remove this comment to see the full error message */}\n      <Section>\n        {/* @ts-expect-error ts-migrate(2745) FIXME: This JSX tag's 'children' prop expects type 'never... Remove this comment to see the full error message */}\n        <Switch\n          // @ts-expect-error ts-migrate(2322) FIXME: Type 'string' is not assignable to type 'never'.\n          data-test=\"Counter.Formatting.FormatTargetValue\"\n          // @ts-expect-error ts-migrate(2322) FIXME: Type 'any' is not assignable to type 'never'.\n          defaultChecked={options.formatTargetValue}\n          // @ts-expect-error ts-migrate(2322) FIXME: Type '(formatTargetValue: any) => any' is not assi... Remove this comment to see the full error message\n          onChange={(formatTargetValue: any) => onOptionsChange({ formatTargetValue })}>\n          Format Target Value\n        </Switch>\n      </Section>\n    </React.Fragment>\n  );\n}\n\nFormatSettings.propTypes = EditorPropTypes;\n"],"file":"FormatSettings.js"}