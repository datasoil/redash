{"version":3,"sources":["../../../../src/visualizations/funnel/Renderer/prepareData.ts"],"names":["stepValueToString","value","moment","isMoment","format","visualizationsSettings","dateTimeFormat","prepareData","rows","options","length","stepCol","colName","valueCol","sortKeyCol","reverse","data","row","step","parseFloat","maxVal","d","forEach","i","pctMax","pctPrevious","slice","itemsLimit"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;;;AAEA,SAASA,iBAAT,CAA2BC,KAA3B,EAAuC;AACrC,MAAIC,gBAAOC,QAAP,CAAgBF,KAAhB,CAAJ,EAA4B;AAC1B,QAAMG,MAAM,GAAGC,+CAAuBC,cAAvB,IAAyC,kBAAxD;AACA,WAAOL,KAAK,CAACG,MAAN,CAAaA,MAAb,CAAP;AACD;;AACD,SAAO,sBAASH,KAAT,CAAP;AACD;;AAEc,SAASM,WAAT,CAAqBC,IAArB,EAAgCC,OAAhC,EAA8C;AAC3D,MAAID,IAAI,CAACE,MAAL,KAAgB,CAAhB,IAAqB,CAACD,OAAO,CAACE,OAAR,CAAgBC,OAAtC,IAAiD,CAACH,OAAO,CAACI,QAAR,CAAiBD,OAAvE,EAAgF;AAC9E,WAAO,EAAP;AACD;;AAEDJ,EAAAA,IAAI,GAAG,CAAC,GAAGA,IAAJ,CAAP;;AACA,MAAIC,OAAO,CAACK,UAAR,CAAmBF,OAAvB,EAAgC;AAC9BJ,IAAAA,IAAI,GAAG,oBAAOA,IAAP,EAAaC,OAAO,CAACK,UAAR,CAAmBF,OAAhC,CAAP;AACD;;AACD,MAAIH,OAAO,CAACK,UAAR,CAAmBC,OAAvB,EAAgC;AAC9BP,IAAAA,IAAI,GAAGA,IAAI,CAACO,OAAL,EAAP;AACD;;AAED,MAAMC,IAAI,GAAG,iBAAIR,IAAJ,EAAUS,GAAG,KAAK;AAC7BC,IAAAA,IAAI,EAAElB,iBAAiB,CAACiB,GAAG,CAACR,OAAO,CAACE,OAAR,CAAgBC,OAAjB,CAAJ,CADM;AAE7BX,IAAAA,KAAK,EAAEkB,UAAU,CAACF,GAAG,CAACR,OAAO,CAACI,QAAR,CAAiBD,OAAlB,CAAJ,CAAV,IAA6C;AAFvB,GAAL,CAAb,CAAb,CAb2D,CAkB3D;;AACA,MAAMQ,MAAM,GAAG,mBAAMJ,IAAN,EAAYK,CAAC,IAAIA,CAAC,CAACpB,KAAnB,EAA0BA,KAAzC;AACAe,EAAAA,IAAI,CAACM,OAAL,CAAa,CAACD,CAAD,EAAIE,CAAJ,KAAU;AACrB;AACAF,IAAAA,CAAC,CAACG,MAAF,GAAYH,CAAC,CAACpB,KAAF,GAAUmB,MAAX,GAAqB,KAAhC,CAFqB,CAGrB;;AACAC,IAAAA,CAAC,CAACI,WAAF,GAAgBF,CAAC,KAAK,CAAN,IAAWF,CAAC,CAACpB,KAAF,KAAYe,IAAI,CAACO,CAAC,GAAG,CAAL,CAAJ,CAAYtB,KAAnC,GAA2C,KAA3C,GAAoDoB,CAAC,CAACpB,KAAF,GAAUe,IAAI,CAACO,CAAC,GAAG,CAAL,CAAJ,CAAYtB,KAAvB,GAAgC,KAAnG;AACD,GALD;AAOA,SAAOe,IAAI,CAACU,KAAL,CAAW,CAAX,EAAcjB,OAAO,CAACkB,UAAtB,CAAP;AACD","sourcesContent":["import { map, maxBy, sortBy, toString } from \"lodash\";\nimport moment from \"moment\";\nimport { visualizationsSettings } from \"@/visualizations/visualizationsSettings\";\n\nfunction stepValueToString(value: any) {\n  if (moment.isMoment(value)) {\n    const format = visualizationsSettings.dateTimeFormat || \"DD/MM/YYYY HH:mm\";\n    return value.format(format);\n  }\n  return toString(value);\n}\n\nexport default function prepareData(rows: any, options: any) {\n  if (rows.length === 0 || !options.stepCol.colName || !options.valueCol.colName) {\n    return [];\n  }\n\n  rows = [...rows];\n  if (options.sortKeyCol.colName) {\n    rows = sortBy(rows, options.sortKeyCol.colName);\n  }\n  if (options.sortKeyCol.reverse) {\n    rows = rows.reverse();\n  }\n\n  const data = map(rows, row => ({\n    step: stepValueToString(row[options.stepCol.colName]),\n    value: parseFloat(row[options.valueCol.colName]) || 0.0,\n  }));\n\n  // @ts-expect-error ts-migrate(2532) FIXME: Object is possibly 'undefined'.\n  const maxVal = maxBy(data, d => d.value).value;\n  data.forEach((d, i) => {\n    // @ts-expect-error ts-migrate(2339) FIXME: Property 'pctMax' does not exist on type '{ step: ... Remove this comment to see the full error message\n    d.pctMax = (d.value / maxVal) * 100.0;\n    // @ts-expect-error ts-migrate(2339) FIXME: Property 'pctPrevious' does not exist on type '{ s... Remove this comment to see the full error message\n    d.pctPrevious = i === 0 || d.value === data[i - 1].value ? 100.0 : (d.value / data[i - 1].value) * 100.0;\n  });\n\n  return data.slice(0, options.itemsLimit);\n}\n"],"file":"prepareData.js"}