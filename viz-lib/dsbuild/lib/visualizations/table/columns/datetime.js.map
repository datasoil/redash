{"version":3,"sources":["../../../../src/visualizations/table/columns/datetime.tsx"],"names":["Editor","column","onChange","onChangeDebounced","dateTimeFormat","event","target","value","initDateTimeColumn","format","prepareData","row","text","name","DateTimeColumn","friendlyName"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;;;;;;;;;;;;;;;AAUA,SAASA,MAAT,OAA6C;AAAA,MAA3BC,MAA2B,QAA3BA,MAA2B;AAAA,MAAnBC,QAAmB,QAAnBA,QAAmB;;AAAA,8BACf,uCAAqBA,QAArB,EAA+B,GAA/B,CADe;AAAA;AAAA,MACpCC,iBADoC;;AAG3C;AAAA;AACE;AACA,iCAAC,eAAD,qBACE,6BAAC,aAAD;AACE,MAAA,KAAK,eACH,6BAAC,cAAD,CAAO,QAAP,yCAEE,6BAAC,mBAAD,CAAa,mBAAb,OAFF,CAFJ;AAOE,mBAAU,oCAPZ;AAQE,MAAA,YAAY,EAAEF,MAAM,CAACG,cARvB;AASE,MAAA,QAAQ,EAAGC,KAAD,IAAgBF,iBAAiB,CAAC;AAAEC,QAAAA,cAAc,EAAEC,KAAK,CAACC,MAAN,CAAaC;AAA/B,OAAD;AAT7C,MADF;AAFF;AAgBD;;AAEc,SAASC,kBAAT,CAA4BP,MAA5B,EAAyC;AACtD,MAAMQ,MAAM,GAAG,0CAAwBR,MAAM,CAACG,cAA/B,CAAf;;AAEA,WAASM,WAAT,CAAqBC,GAArB,EAA+B;AAC7B,WAAO;AACLC,MAAAA,IAAI,EAAEH,MAAM,CAACE,GAAG,CAACV,MAAM,CAACY,IAAR,CAAJ;AADP,KAAP;AAGD;;AAED,WAASC,cAAT,QAAsC;AAAA,QAAZH,GAAY,SAAZA,GAAY;;AACpC;AADoC,uBAEnBD,WAAW,CAACC,GAAD,CAFQ;AAAA,QAE5BC,IAF4B,gBAE5BA,IAF4B;;AAGpC,WAAOA,IAAP;AACD;;AAEDE,EAAAA,cAAc,CAACJ,WAAf,GAA6BA,WAA7B;AAEA,SAAOI,cAAP;AACD;;AAEDN,kBAAkB,CAACO,YAAnB,GAAkC,WAAlC;AACAP,kBAAkB,CAACR,MAAnB,GAA4BA,MAA5B","sourcesContent":["import React from \"react\";\nimport { useDebouncedCallback } from \"use-debounce\";\nimport { Section, Input, ContextHelp } from \"@/components/visualizations/editor\";\nimport { createDateTimeFormatter } from \"@/lib/value-format\";\n\ntype Props = {\n  column: {\n    name: string;\n    dateTimeFormat?: string;\n  };\n  onChange: (...args: any[]) => any;\n};\n\nfunction Editor({ column, onChange }: Props) {\n  const [onChangeDebounced] = useDebouncedCallback(onChange, 200);\n\n  return (\n    // @ts-expect-error ts-migrate(2745) FIXME: This JSX tag's 'children' prop expects type 'never... Remove this comment to see the full error message\n    <Section>\n      <Input\n        label={\n          <React.Fragment>\n            Date/Time format\n            <ContextHelp.DateTimeFormatSpecs />\n          </React.Fragment>\n        }\n        data-test=\"Table.ColumnEditor.DateTime.Format\"\n        defaultValue={column.dateTimeFormat}\n        onChange={(event: any) => onChangeDebounced({ dateTimeFormat: event.target.value })}\n      />\n    </Section>\n  );\n}\n\nexport default function initDateTimeColumn(column: any) {\n  const format = createDateTimeFormatter(column.dateTimeFormat);\n\n  function prepareData(row: any) {\n    return {\n      text: format(row[column.name]),\n    };\n  }\n\n  function DateTimeColumn({ row }: any) {\n    // eslint-disable-line react/prop-types\n    const { text } = prepareData(row);\n    return text;\n  }\n\n  DateTimeColumn.prepareData = prepareData;\n\n  return DateTimeColumn;\n}\n\ninitDateTimeColumn.friendlyName = \"Date/Time\";\ninitDateTimeColumn.Editor = Editor;\n"],"file":"datetime.js"}