{"version":3,"sources":["../../../../src/visualizations/table/columns/text.tsx"],"names":["Editor","column","onChange","allowHTML","event","target","checked","highlightLinks","initTextColumn","format","prepareData","row","text","name","TextColumn","friendlyName"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;;;AAWA,SAASA,MAAT,OAA6C;AAAA,MAA3BC,MAA2B,QAA3BA,MAA2B;AAAA,MAAnBC,SAAmB,QAAnBA,QAAmB;AAC3C,sBACE,6BAAC,cAAD,CAAO,QAAP,qBAEE,6BAAC,eAAD,qBACE,6BAAC,gBAAD;AACE,iBAAU,mCADZ;AAEE,IAAA,OAAO,EAAED,MAAM,CAACE,SAFlB;AAGE,IAAA,QAAQ,EAAEC,KAAK,IAAIF,SAAQ,CAAC;AAAEC,MAAAA,SAAS,EAAEC,KAAK,CAACC,MAAN,CAAaC;AAA1B,KAAD;AAH7B,0BADF,CAFF,EAWGL,MAAM,CAACE,SAAP;AAAA;AACC;AACA,+BAAC,eAAD,qBACE,6BAAC,gBAAD;AACE,iBAAU,wCADZ;AAEE,IAAA,OAAO,EAAEF,MAAM,CAACM,cAFlB;AAGE,IAAA,QAAQ,EAAEH,KAAK,IAAIF,SAAQ,CAAC;AAAEK,MAAAA,cAAc,EAAEH,KAAK,CAACC,MAAN,CAAaC;AAA/B,KAAD;AAH7B,uBADF,CAbJ,CADF;AAyBD;;AAEc,SAASE,cAAT,CAAwBP,MAAxB,EAAqC;AAClD,MAAMQ,MAAM,GAAG,sCAAoBR,MAAM,CAACE,SAAP,IAAoBF,MAAM,CAACM,cAA/C,CAAf;;AAEA,WAASG,WAAT,CAAqBC,GAArB,EAA+B;AAC7B,WAAO;AACLC,MAAAA,IAAI,EAAEH,MAAM,CAACE,GAAG,CAACV,MAAM,CAACY,IAAR,CAAJ;AADP,KAAP;AAGD;;AAED,WAASC,UAAT,QAAkC;AAAA,QAAZH,GAAY,SAAZA,GAAY;;AAChC;AADgC,uBAEfD,WAAW,CAACC,GAAD,CAFI;AAAA,QAExBC,IAFwB,gBAExBA,IAFwB;;AAGhC,WAAOX,MAAM,CAACE,SAAP,gBAAmB,6BAAC,oBAAD,QAAcS,IAAd,CAAnB,GAAuDA,IAA9D;AACD;;AAEDE,EAAAA,UAAU,CAACJ,WAAX,GAAyBA,WAAzB;AAEA,SAAOI,UAAP;AACD;;AAEDN,cAAc,CAACO,YAAf,GAA8B,MAA9B;AACAP,cAAc,CAACR,MAAf,GAAwBA,MAAxB","sourcesContent":["import React from \"react\";\nimport HtmlContent from \"@/components/HtmlContent\";\nimport { Section, Checkbox } from \"@/components/visualizations/editor\";\nimport { createTextFormatter } from \"@/lib/value-format\";\n\ntype Props = {\n  column: {\n    name: string;\n    allowHTML?: boolean;\n    highlightLinks?: boolean;\n  };\n  onChange: (...args: any[]) => any;\n};\n\nfunction Editor({ column, onChange }: Props) {\n  return (\n    <React.Fragment>\n      {/* @ts-expect-error ts-migrate(2745) FIXME: This JSX tag's 'children' prop expects type 'never... Remove this comment to see the full error message */}\n      <Section>\n        <Checkbox\n          data-test=\"Table.ColumnEditor.Text.AllowHTML\"\n          checked={column.allowHTML}\n          onChange={event => onChange({ allowHTML: event.target.checked })}>\n          Allow HTML content\n        </Checkbox>\n      </Section>\n\n      {column.allowHTML && (\n        // @ts-expect-error ts-migrate(2745) FIXME: This JSX tag's 'children' prop expects type 'never... Remove this comment to see the full error message\n        <Section>\n          <Checkbox\n            data-test=\"Table.ColumnEditor.Text.HighlightLinks\"\n            checked={column.highlightLinks}\n            onChange={event => onChange({ highlightLinks: event.target.checked })}>\n            Highlight links\n          </Checkbox>\n        </Section>\n      )}\n    </React.Fragment>\n  );\n}\n\nexport default function initTextColumn(column: any) {\n  const format = createTextFormatter(column.allowHTML && column.highlightLinks);\n\n  function prepareData(row: any) {\n    return {\n      text: format(row[column.name]),\n    };\n  }\n\n  function TextColumn({ row }: any) {\n    // eslint-disable-line react/prop-types\n    const { text } = prepareData(row);\n    return column.allowHTML ? <HtmlContent>{text}</HtmlContent> : text;\n  }\n\n  TextColumn.prepareData = prepareData;\n\n  return TextColumn;\n}\n\ninitTextColumn.friendlyName = \"Text\";\ninitTextColumn.Editor = Editor;\n"],"file":"text.js"}