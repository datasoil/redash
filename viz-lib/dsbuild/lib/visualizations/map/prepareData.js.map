{"version":3,"sources":["../../../src/visualizations/map/prepareData.ts"],"names":["prepareData","data","options","colorScale","d3","scale","category10","classify","latColName","lonColName","pointGroups","rows","All","name","points","row","lat","lon","length","result","groups","color"],"mappings":";;;;;;;AAAA;;AACA;;;;AAEe,SAASA,WAAT,CAAqBC,IAArB,EAAgCC,OAAhC,EAA8C;AAC3D;AACA,MAAMC,UAAU,GAAGC,WAAGC,KAAH,CAASC,UAAT,EAAnB;;AAF2D,MAInDC,QAJmD,GAIdL,OAJc,CAInDK,QAJmD;AAAA,MAIzCC,UAJyC,GAIdN,OAJc,CAIzCM,UAJyC;AAAA,MAI7BC,UAJ6B,GAIdP,OAJc,CAI7BO,UAJ6B;AAM3D,MAAMC,WAAW,GAAGH,QAAQ,GAAG,qBAAQN,IAAI,CAACU,IAAb,EAAmBJ,QAAnB,CAAH,GAAkC;AAAEK,IAAAA,GAAG,EAAEX,IAAI,CAACU;AAAZ,GAA9D;AAEA,SAAO,oBACL,iBAAID,WAAJ,EAAiB,CAACC,IAAD,EAAOE,IAAP,KAAgB;AAC/B,QAAMC,MAAM,GAAG,oBACb,iBAAIH,IAAJ,EAAUI,GAAG,IAAI;AACf,UAAMC,GAAG,GAAGD,GAAG,CAACP,UAAD,CAAf;AACA,UAAMS,GAAG,GAAGF,GAAG,CAACN,UAAD,CAAf;;AACA,UAAI,mBAAMO,GAAN,KAAc,mBAAMC,GAAN,CAAlB,EAA8B;AAC5B,eAAO,IAAP;AACD;;AACD,aAAO;AAAED,QAAAA,GAAF;AAAOC,QAAAA,GAAP;AAAYF,QAAAA,GAAG,EAAE,kBAAKA,GAAL,EAAU,CAACP,UAAD,EAAaC,UAAb,CAAV;AAAjB,OAAP;AACD,KAPD,CADa,CAAf;;AAUA,QAAIK,MAAM,CAACI,MAAP,KAAkB,CAAtB,EAAyB;AACvB,aAAO,IAAP;AACD;;AAED,QAAMC,MAAM,GAAG,oBAAO,EAAP,EAAWjB,OAAO,CAACkB,MAAR,CAAeP,IAAf,CAAX,EAAiC;AAAEA,MAAAA,IAAF;AAAQC,MAAAA;AAAR,KAAjC,CAAf;;AACA,QAAI,mBAAMK,MAAM,CAACE,KAAb,CAAJ,EAAyB;AACvBF,MAAAA,MAAM,CAACE,KAAP,GAAelB,UAAU,CAACU,IAAD,CAAzB;AACD;;AAED,WAAOM,MAAP;AACD,GArBD,CADK,CAAP;AAwBD","sourcesContent":["import d3 from \"d3\";\nimport { isNil, extend, map, filter, groupBy, omit } from \"lodash\";\n\nexport default function prepareData(data: any, options: any) {\n  // @ts-expect-error ts-migrate(2339) FIXME: Property 'scale' does not exist on type 'typeof im... Remove this comment to see the full error message\n  const colorScale = d3.scale.category10();\n\n  const { classify, latColName, lonColName } = options;\n\n  const pointGroups = classify ? groupBy(data.rows, classify) : { All: data.rows };\n\n  return filter(\n    map(pointGroups, (rows, name) => {\n      const points = filter(\n        map(rows, row => {\n          const lat = row[latColName];\n          const lon = row[lonColName];\n          if (isNil(lat) || isNil(lon)) {\n            return null;\n          }\n          return { lat, lon, row: omit(row, [latColName, lonColName]) };\n        })\n      );\n      if (points.length === 0) {\n        return null;\n      }\n\n      const result = extend({}, options.groups[name], { name, points });\n      if (isNil(result.color)) {\n        result.color = colorScale(name);\n      }\n\n      return result;\n    })\n  );\n}\n"],"file":"prepareData.js"}