{"version":3,"sources":["../../../src/visualizations/box-plot/Renderer.tsx"],"names":["calcIqr","k","d","q1","quartiles","q3","iqr","i","j","length","render","container","data","xAxisLabel","yAxisLabel","d3","select","containerBounds","node","getBoundingClientRect","containerWidth","Math","floor","width","containerHeight","height","margin","top","right","bottom","left","inner","min","Infinity","max","mydata","value","columns","col","name","xscale","scale","ordinal","domain","rangeBands","boxWidth","column","rows","row","push","ceil","yscale","linear","range","chart","whiskers","xAxis","svg","axis","orient","yAxis","xLines","tickSize","yLines","barOffset","selectAll","remove","append","attr","plot","text","call","enter","_","Renderer","options","setContainer","unwatch","propTypes","RendererPropTypes"],"mappings":"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","sourcesContent":["import { map, each } from \"lodash\";\nimport d3 from \"d3\";\nimport React, { useState, useEffect } from \"react\";\nimport resizeObserver from \"@/services/resizeObserver\";\nimport { RendererPropTypes } from \"@/visualizations/prop-types\";\nimport box from \"./d3box\";\nimport \"./renderer.less\";\n\nfunction calcIqr(k: any) {\n  return (d: any) => {\n    const q1 = d.quartiles[0];\n    const q3 = d.quartiles[2];\n    const iqr = (q3 - q1) * k;\n\n    let i = -1;\n    let j = d.length;\n\n    i += 1;\n    while (d[i] < q1 - iqr) {\n      i += 1;\n    }\n\n    j -= 1;\n    while (d[j] > q3 + iqr) {\n      j -= 1;\n    }\n\n    return [i, j];\n  };\n}\n\nfunction render(container: any, data: any, { xAxisLabel, yAxisLabel }: any) {\n  container = d3.select(container);\n\n  const containerBounds = container.node().getBoundingClientRect();\n  const containerWidth = Math.floor(containerBounds.width);\n  const containerHeight = Math.floor(containerBounds.height);\n\n  const margin = {\n    top: 10,\n    right: 50,\n    bottom: 40,\n    left: 50,\n    inner: 25,\n  };\n  const width = containerWidth - margin.right - margin.left;\n  const height = containerHeight - margin.top - margin.bottom;\n\n  let min = Infinity;\n  let max = -Infinity;\n  const mydata: any = [];\n  let value = 0;\n  let d = [];\n\n  const columns = map(data.columns, col => col.name);\n  // @ts-expect-error ts-migrate(2339) FIXME: Property 'scale' does not exist on type 'typeof im... Remove this comment to see the full error message\n  const xscale = d3.scale\n    .ordinal()\n    .domain(columns)\n    .rangeBands([0, containerWidth - margin.left - margin.right]);\n\n  let boxWidth;\n  if (columns.length > 1) {\n    boxWidth = Math.min(xscale(columns[1]), 120.0);\n  } else {\n    boxWidth = 120.0;\n  }\n  margin.inner = boxWidth / 3.0;\n\n  each(columns, (column, i) => {\n    d = mydata[i] = [];\n    each(data.rows, row => {\n      value = row[column];\n      d.push(value);\n      if (value > max) max = Math.ceil(value);\n      if (value < min) min = Math.floor(value);\n    });\n  });\n\n  // @ts-expect-error ts-migrate(2339) FIXME: Property 'scale' does not exist on type 'typeof im... Remove this comment to see the full error message\n  const yscale = d3.scale\n    .linear()\n    .domain([min * 0.99, max * 1.01])\n    .range([height, 0]);\n\n  const chart = box()\n    .whiskers(calcIqr(1.5))\n    // @ts-expect-error ts-migrate(2339) FIXME: Property 'width' does not exist on type '{ (g: any... Remove this comment to see the full error message\n    .width(boxWidth - 2 * margin.inner)\n    .height(height)\n    .domain([min * 0.99, max * 1.01]);\n  const xAxis = d3.svg\n    // @ts-expect-error ts-migrate(2339) FIXME: Property 'axis' does not exist on type '(url: stri... Remove this comment to see the full error message\n    .axis()\n    .scale(xscale)\n    .orient(\"bottom\");\n\n  const yAxis = d3.svg\n    // @ts-expect-error ts-migrate(2339) FIXME: Property 'axis' does not exist on type '(url: stri... Remove this comment to see the full error message\n    .axis()\n    .scale(yscale)\n    .orient(\"left\");\n\n  const xLines = d3.svg\n    // @ts-expect-error ts-migrate(2339) FIXME: Property 'axis' does not exist on type '(url: stri... Remove this comment to see the full error message\n    .axis()\n    .scale(xscale)\n    .tickSize(height)\n    .orient(\"bottom\");\n\n  const yLines = d3.svg\n    // @ts-expect-error ts-migrate(2339) FIXME: Property 'axis' does not exist on type '(url: stri... Remove this comment to see the full error message\n    .axis()\n    .scale(yscale)\n    .tickSize(width)\n    .orient(\"right\");\n\n  function barOffset(i: any) {\n    return xscale(columns[i]) + (xscale(columns[1]) - margin.inner) / 2.0;\n  }\n\n  container.selectAll(\"*\").remove();\n\n  const svg = container\n    .append(\"svg\")\n    .attr(\"width\", containerWidth)\n    .attr(\"height\", height + margin.bottom + margin.top);\n\n  const plot = svg\n    .append(\"g\")\n    .attr(\"width\", containerWidth - margin.left - margin.right)\n    .attr(\"transform\", `translate(${margin.left},${margin.top})`);\n\n  svg\n    .append(\"text\")\n    .attr(\"class\", \"box\")\n    .attr(\"x\", containerWidth / 2.0)\n    .attr(\"text-anchor\", \"middle\")\n    .attr(\"y\", height + margin.bottom)\n    .text(xAxisLabel);\n\n  svg\n    .append(\"text\")\n    .attr(\"class\", \"box\")\n    .attr(\"transform\", `translate(10,${(height + margin.top + margin.bottom) / 2.0})rotate(-90)`)\n    .attr(\"text-anchor\", \"middle\")\n    .text(yAxisLabel);\n\n  plot\n    .append(\"rect\")\n    .attr(\"class\", \"grid-background\")\n    .attr(\"width\", width)\n    .attr(\"height\", height);\n\n  plot\n    .append(\"g\")\n    .attr(\"class\", \"grid\")\n    .call(yLines);\n\n  plot\n    .append(\"g\")\n    .attr(\"class\", \"grid\")\n    .call(xLines);\n\n  plot\n    .append(\"g\")\n    .attr(\"class\", \"x axis\")\n    .attr(\"transform\", `translate(0,${height})`)\n    .call(xAxis);\n\n  plot\n    .append(\"g\")\n    .attr(\"class\", \"y axis\")\n    .call(yAxis);\n\n  plot\n    .selectAll(\".box\")\n    .data(mydata)\n    .enter()\n    .append(\"g\")\n    .attr(\"class\", \"box\")\n    .attr(\"width\", boxWidth)\n    .attr(\"height\", height)\n    .attr(\"transform\", (_: any, i: any) => `translate(${barOffset(i)},${0})`)\n    .call(chart);\n}\n\nexport default function Renderer({ data, options }: any) {\n  const [container, setContainer] = useState(null);\n\n  useEffect(() => {\n    if (container) {\n      render(container, data, options);\n      const unwatch = resizeObserver(container, () => {\n        render(container, data, options);\n      });\n      return unwatch;\n    }\n  }, [container, data, options]);\n\n  // @ts-expect-error ts-migrate(2322) FIXME: Type 'Dispatch<SetStateAction<null>>' is not assig... Remove this comment to see the full error message\n  return <div className=\"box-plot-deprecated-visualization-container\" ref={setContainer} />;\n}\n\nRenderer.propTypes = RendererPropTypes;\n"],"file":"Renderer.js"}