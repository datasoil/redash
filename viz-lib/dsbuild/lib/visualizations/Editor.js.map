{"version":3,"sources":["../../src/visualizations/Editor.tsx"],"names":["Editor","type","optionsProp","options","data","otherProps","registeredVisualizations","getOptions"],"mappings":";;;;;;;AAAA;;AAEA;;;;;;;;;;;;;;AAUe,SAASA,MAAT,OAA4E;AAAA,MAA1DC,IAA0D,QAA1DA,IAA0D;AAAA,MAA3CC,WAA2C,QAApDC,OAAoD;AAAA,MAA9BC,IAA8B,QAA9BA,IAA8B;AAAA,MAArBC,UAAqB;;AACzF;AADyF,8BAE1DC,kCAAyBL,IAAzB,CAF0D;AAAA,MAEjFD,MAFiF,yBAEjFA,MAFiF;AAAA,MAEzEO,UAFyE,yBAEzEA,UAFyE;AAGzF,MAAMJ,OAAO,GAAG,oBAAQ,MAAMI,UAAU,CAACL,WAAD,EAAcE,IAAd,CAAxB,EAA6C,CAACF,WAAD,EAAcE,IAAd,CAA7C,CAAhB;AAEA,sBAAO,6BAAC,MAAD;AAAQ,IAAA,OAAO,EAAED,OAAjB;AAA0B,IAAA,IAAI,EAAEC;AAAhC,KAA0CC,UAA1C,EAAP;AACD","sourcesContent":["import React, { useMemo } from \"react\";\nimport { EditorPropTypes } from \"@/visualizations/prop-types\";\nimport registeredVisualizations from \"@/visualizations/registeredVisualizations\";\n\n/*\n(ts-migrate) TODO: Migrate the remaining prop types\n...EditorPropTypes\n*/\ntype Props = {\n  type: string;\n} & typeof EditorPropTypes;\n\nexport default function Editor({ type, options: optionsProp, data, ...otherProps }: Props) {\n  // @ts-expect-error ts-migrate(7053) FIXME: Element implicitly has an 'any' type because expre... Remove this comment to see the full error message\n  const { Editor, getOptions } = registeredVisualizations[type];\n  const options = useMemo(() => getOptions(optionsProp, data), [optionsProp, data]);\n\n  return <Editor options={options} data={data} {...otherProps} />;\n}\n"],"file":"Editor.js"}