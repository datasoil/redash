{"version":3,"sources":["../../src/services/resizeObserver.ts"],"names":["items","Map","checkItems","size","forEach","item","node","bounds","getBoundingClientRect","width","Math","round","height","callback","setTimeout","observe","has","shouldTrigger","set","delete"],"mappings":";;;;;;AAAA,IAAMA,KAAK,GAAG,IAAIC,GAAJ,EAAd;;AAEA,SAASC,UAAT,GAAsB;AACpB,MAAIF,KAAK,CAACG,IAAN,GAAa,CAAjB,EAAoB;AAClBH,IAAAA,KAAK,CAACI,OAAN,CAAc,CAACC,IAAD,EAAOC,IAAP,KAAgB;AAC5B,UAAMC,MAAM,GAAGD,IAAI,CAACE,qBAAL,EAAf,CAD4B,CAE5B;;AACA,UAAMC,KAAK,GAAGC,IAAI,CAACC,KAAL,CAAWJ,MAAM,CAACE,KAAP,GAAe,EAA1B,CAAd;AACA,UAAMG,MAAM,GAAGF,IAAI,CAACC,KAAL,CAAWJ,MAAM,CAACK,MAAP,GAAgB,EAA3B,CAAf;;AAEA,UAAIP,IAAI,CAACI,KAAL,KAAeA,KAAf,IAAwBJ,IAAI,CAACO,MAAL,KAAgBA,MAA5C,EAAoD;AAClDP,QAAAA,IAAI,CAACI,KAAL,GAAaA,KAAb;AACAJ,QAAAA,IAAI,CAACO,MAAL,GAAcA,MAAd;AACAP,QAAAA,IAAI,CAACQ,QAAL,CAAcP,IAAd;AACD;AACF,KAXD;AAaAQ,IAAAA,UAAU,CAACZ,UAAD,EAAa,GAAb,CAAV;AACD;AACF;;AAEc,SAASa,OAAT,CAAiBT,IAAjB,EAA4BO,QAA5B,EAA2C;AACxD,MAAIP,IAAI,IAAI,CAACN,KAAK,CAACgB,GAAN,CAAUV,IAAV,CAAb,EAA8B;AAC5B,QAAMW,aAAa,GAAGjB,KAAK,CAACG,IAAN,KAAe,CAArC;AACAH,IAAAA,KAAK,CAACkB,GAAN,CAAUZ,IAAV,EAAgB;AAAEO,MAAAA;AAAF,KAAhB;;AACA,QAAII,aAAJ,EAAmB;AACjBf,MAAAA,UAAU;AACX;;AACD,WAAO,MAAMF,KAAK,CAACmB,MAAN,CAAab,IAAb,CAAb;AACD;;AACD,SAAO,MAAM,CAAE,CAAf;AACD","sourcesContent":["const items = new Map();\n\nfunction checkItems() {\n  if (items.size > 0) {\n    items.forEach((item, node) => {\n      const bounds = node.getBoundingClientRect();\n      // convert to int (because these numbers needed for comparisons), but preserve 1 decimal point\n      const width = Math.round(bounds.width * 10);\n      const height = Math.round(bounds.height * 10);\n\n      if (item.width !== width || item.height !== height) {\n        item.width = width;\n        item.height = height;\n        item.callback(node);\n      }\n    });\n\n    setTimeout(checkItems, 100);\n  }\n}\n\nexport default function observe(node: any, callback: any) {\n  if (node && !items.has(node)) {\n    const shouldTrigger = items.size === 0;\n    items.set(node, { callback });\n    if (shouldTrigger) {\n      checkItems();\n    }\n    return () => items.delete(node);\n  }\n  return () => {};\n}\n"],"file":"resizeObserver.js"}